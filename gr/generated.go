// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

package gr

import (
	"context"
	"encoding/json"
	"fmt"

	"github.com/Khan/genqlient/graphql"
)

// BookInfo includes the GraphQL fields of Book requested by the fragment BookInfo.
type BookInfo struct {
	Id                     string                                            `json:"id"`
	LegacyId               int64                                             `json:"legacyId"`
	Description            string                                            `json:"description"`
	BookGenres             []BookInfoBookGenresBookGenre                     `json:"bookGenres"`
	BookSeries             []BookInfoBookSeries                              `json:"bookSeries"`
	Details                BookInfoDetailsBookDetails                        `json:"details"`
	ImageUrl               string                                            `json:"imageUrl"`
	PrimaryContributorEdge BookInfoPrimaryContributorEdgeBookContributorEdge `json:"primaryContributorEdge"`
	Stats                  BookInfoStatsBookOrWorkStats                      `json:"stats"`
	Title                  string                                            `json:"title"`
	TitlePrimary           string                                            `json:"titlePrimary"`
	WebUrl                 string                                            `json:"webUrl"`
}

// GetId returns BookInfo.Id, and is useful for accessing the field via an interface.
func (v *BookInfo) GetId() string { return v.Id }

// GetLegacyId returns BookInfo.LegacyId, and is useful for accessing the field via an interface.
func (v *BookInfo) GetLegacyId() int64 { return v.LegacyId }

// GetDescription returns BookInfo.Description, and is useful for accessing the field via an interface.
func (v *BookInfo) GetDescription() string { return v.Description }

// GetBookGenres returns BookInfo.BookGenres, and is useful for accessing the field via an interface.
func (v *BookInfo) GetBookGenres() []BookInfoBookGenresBookGenre { return v.BookGenres }

// GetBookSeries returns BookInfo.BookSeries, and is useful for accessing the field via an interface.
func (v *BookInfo) GetBookSeries() []BookInfoBookSeries { return v.BookSeries }

// GetDetails returns BookInfo.Details, and is useful for accessing the field via an interface.
func (v *BookInfo) GetDetails() BookInfoDetailsBookDetails { return v.Details }

// GetImageUrl returns BookInfo.ImageUrl, and is useful for accessing the field via an interface.
func (v *BookInfo) GetImageUrl() string { return v.ImageUrl }

// GetPrimaryContributorEdge returns BookInfo.PrimaryContributorEdge, and is useful for accessing the field via an interface.
func (v *BookInfo) GetPrimaryContributorEdge() BookInfoPrimaryContributorEdgeBookContributorEdge {
	return v.PrimaryContributorEdge
}

// GetStats returns BookInfo.Stats, and is useful for accessing the field via an interface.
func (v *BookInfo) GetStats() BookInfoStatsBookOrWorkStats { return v.Stats }

// GetTitle returns BookInfo.Title, and is useful for accessing the field via an interface.
func (v *BookInfo) GetTitle() string { return v.Title }

// GetTitlePrimary returns BookInfo.TitlePrimary, and is useful for accessing the field via an interface.
func (v *BookInfo) GetTitlePrimary() string { return v.TitlePrimary }

// GetWebUrl returns BookInfo.WebUrl, and is useful for accessing the field via an interface.
func (v *BookInfo) GetWebUrl() string { return v.WebUrl }

// BookInfoBookGenresBookGenre includes the requested fields of the GraphQL type BookGenre.
type BookInfoBookGenresBookGenre struct {
	Genre BookInfoBookGenresBookGenreGenre `json:"genre"`
}

// GetGenre returns BookInfoBookGenresBookGenre.Genre, and is useful for accessing the field via an interface.
func (v *BookInfoBookGenresBookGenre) GetGenre() BookInfoBookGenresBookGenreGenre { return v.Genre }

// BookInfoBookGenresBookGenreGenre includes the requested fields of the GraphQL type Genre.
type BookInfoBookGenresBookGenreGenre struct {
	Name string `json:"name"`
}

// GetName returns BookInfoBookGenresBookGenreGenre.Name, and is useful for accessing the field via an interface.
func (v *BookInfoBookGenresBookGenreGenre) GetName() string { return v.Name }

// BookInfoBookSeries includes the requested fields of the GraphQL type BookSeries.
type BookInfoBookSeries struct {
	Series          BookInfoBookSeriesSeries `json:"series"`
	SeriesPlacement string                   `json:"seriesPlacement"`
}

// GetSeries returns BookInfoBookSeries.Series, and is useful for accessing the field via an interface.
func (v *BookInfoBookSeries) GetSeries() BookInfoBookSeriesSeries { return v.Series }

// GetSeriesPlacement returns BookInfoBookSeries.SeriesPlacement, and is useful for accessing the field via an interface.
func (v *BookInfoBookSeries) GetSeriesPlacement() string { return v.SeriesPlacement }

// BookInfoBookSeriesSeries includes the requested fields of the GraphQL type Series.
type BookInfoBookSeriesSeries struct {
	Id     string `json:"id"`
	Title  string `json:"title"`
	WebUrl string `json:"webUrl"`
}

// GetId returns BookInfoBookSeriesSeries.Id, and is useful for accessing the field via an interface.
func (v *BookInfoBookSeriesSeries) GetId() string { return v.Id }

// GetTitle returns BookInfoBookSeriesSeries.Title, and is useful for accessing the field via an interface.
func (v *BookInfoBookSeriesSeries) GetTitle() string { return v.Title }

// GetWebUrl returns BookInfoBookSeriesSeries.WebUrl, and is useful for accessing the field via an interface.
func (v *BookInfoBookSeriesSeries) GetWebUrl() string { return v.WebUrl }

// BookInfoDetailsBookDetails includes the requested fields of the GraphQL type BookDetails.
type BookInfoDetailsBookDetails struct {
	Asin            string                             `json:"asin"`
	Isbn13          string                             `json:"isbn13"`
	Format          string                             `json:"format"`
	NumPages        int64                              `json:"numPages"`
	Language        BookInfoDetailsBookDetailsLanguage `json:"language"`
	OfficialUrl     string                             `json:"officialUrl"`
	Publisher       string                             `json:"publisher"`
	PublicationTime float64                            `json:"publicationTime"`
}

// GetAsin returns BookInfoDetailsBookDetails.Asin, and is useful for accessing the field via an interface.
func (v *BookInfoDetailsBookDetails) GetAsin() string { return v.Asin }

// GetIsbn13 returns BookInfoDetailsBookDetails.Isbn13, and is useful for accessing the field via an interface.
func (v *BookInfoDetailsBookDetails) GetIsbn13() string { return v.Isbn13 }

// GetFormat returns BookInfoDetailsBookDetails.Format, and is useful for accessing the field via an interface.
func (v *BookInfoDetailsBookDetails) GetFormat() string { return v.Format }

// GetNumPages returns BookInfoDetailsBookDetails.NumPages, and is useful for accessing the field via an interface.
func (v *BookInfoDetailsBookDetails) GetNumPages() int64 { return v.NumPages }

// GetLanguage returns BookInfoDetailsBookDetails.Language, and is useful for accessing the field via an interface.
func (v *BookInfoDetailsBookDetails) GetLanguage() BookInfoDetailsBookDetailsLanguage {
	return v.Language
}

// GetOfficialUrl returns BookInfoDetailsBookDetails.OfficialUrl, and is useful for accessing the field via an interface.
func (v *BookInfoDetailsBookDetails) GetOfficialUrl() string { return v.OfficialUrl }

// GetPublisher returns BookInfoDetailsBookDetails.Publisher, and is useful for accessing the field via an interface.
func (v *BookInfoDetailsBookDetails) GetPublisher() string { return v.Publisher }

// GetPublicationTime returns BookInfoDetailsBookDetails.PublicationTime, and is useful for accessing the field via an interface.
func (v *BookInfoDetailsBookDetails) GetPublicationTime() float64 { return v.PublicationTime }

// BookInfoDetailsBookDetailsLanguage includes the requested fields of the GraphQL type Language.
type BookInfoDetailsBookDetailsLanguage struct {
	Name string `json:"name"`
}

// GetName returns BookInfoDetailsBookDetailsLanguage.Name, and is useful for accessing the field via an interface.
func (v *BookInfoDetailsBookDetailsLanguage) GetName() string { return v.Name }

// BookInfoPrimaryContributorEdgeBookContributorEdge includes the requested fields of the GraphQL type BookContributorEdge.
type BookInfoPrimaryContributorEdgeBookContributorEdge struct {
	Node BookInfoPrimaryContributorEdgeBookContributorEdgeNodeContributor `json:"node"`
}

// GetNode returns BookInfoPrimaryContributorEdgeBookContributorEdge.Node, and is useful for accessing the field via an interface.
func (v *BookInfoPrimaryContributorEdgeBookContributorEdge) GetNode() BookInfoPrimaryContributorEdgeBookContributorEdgeNodeContributor {
	return v.Node
}

// BookInfoPrimaryContributorEdgeBookContributorEdgeNodeContributor includes the requested fields of the GraphQL type Contributor.
type BookInfoPrimaryContributorEdgeBookContributorEdgeNodeContributor struct {
	Id              string `json:"id"`
	Name            string `json:"name"`
	LegacyId        int64  `json:"legacyId"`
	WebUrl          string `json:"webUrl"`
	ProfileImageUrl string `json:"profileImageUrl"`
	Description     string `json:"description"`
}

// GetId returns BookInfoPrimaryContributorEdgeBookContributorEdgeNodeContributor.Id, and is useful for accessing the field via an interface.
func (v *BookInfoPrimaryContributorEdgeBookContributorEdgeNodeContributor) GetId() string {
	return v.Id
}

// GetName returns BookInfoPrimaryContributorEdgeBookContributorEdgeNodeContributor.Name, and is useful for accessing the field via an interface.
func (v *BookInfoPrimaryContributorEdgeBookContributorEdgeNodeContributor) GetName() string {
	return v.Name
}

// GetLegacyId returns BookInfoPrimaryContributorEdgeBookContributorEdgeNodeContributor.LegacyId, and is useful for accessing the field via an interface.
func (v *BookInfoPrimaryContributorEdgeBookContributorEdgeNodeContributor) GetLegacyId() int64 {
	return v.LegacyId
}

// GetWebUrl returns BookInfoPrimaryContributorEdgeBookContributorEdgeNodeContributor.WebUrl, and is useful for accessing the field via an interface.
func (v *BookInfoPrimaryContributorEdgeBookContributorEdgeNodeContributor) GetWebUrl() string {
	return v.WebUrl
}

// GetProfileImageUrl returns BookInfoPrimaryContributorEdgeBookContributorEdgeNodeContributor.ProfileImageUrl, and is useful for accessing the field via an interface.
func (v *BookInfoPrimaryContributorEdgeBookContributorEdgeNodeContributor) GetProfileImageUrl() string {
	return v.ProfileImageUrl
}

// GetDescription returns BookInfoPrimaryContributorEdgeBookContributorEdgeNodeContributor.Description, and is useful for accessing the field via an interface.
func (v *BookInfoPrimaryContributorEdgeBookContributorEdgeNodeContributor) GetDescription() string {
	return v.Description
}

// BookInfoStatsBookOrWorkStats includes the requested fields of the GraphQL type BookOrWorkStats.
type BookInfoStatsBookOrWorkStats struct {
	AverageRating float64 `json:"averageRating"`
	RatingsCount  int64   `json:"ratingsCount"`
	RatingsSum    int64   `json:"ratingsSum"`
}

// GetAverageRating returns BookInfoStatsBookOrWorkStats.AverageRating, and is useful for accessing the field via an interface.
func (v *BookInfoStatsBookOrWorkStats) GetAverageRating() float64 { return v.AverageRating }

// GetRatingsCount returns BookInfoStatsBookOrWorkStats.RatingsCount, and is useful for accessing the field via an interface.
func (v *BookInfoStatsBookOrWorkStats) GetRatingsCount() int64 { return v.RatingsCount }

// GetRatingsSum returns BookInfoStatsBookOrWorkStats.RatingsSum, and is useful for accessing the field via an interface.
func (v *BookInfoStatsBookOrWorkStats) GetRatingsSum() int64 { return v.RatingsSum }

// GetAuthorWorksGetWorksByContributorContributorWorksConnection includes the requested fields of the GraphQL type ContributorWorksConnection.
type GetAuthorWorksGetWorksByContributorContributorWorksConnection struct {
	Edges    []GetAuthorWorksGetWorksByContributorContributorWorksConnectionEdgesContributorWorksEdge `json:"edges"`
	PageInfo GetAuthorWorksGetWorksByContributorContributorWorksConnectionPageInfo                    `json:"pageInfo"`
}

// GetEdges returns GetAuthorWorksGetWorksByContributorContributorWorksConnection.Edges, and is useful for accessing the field via an interface.
func (v *GetAuthorWorksGetWorksByContributorContributorWorksConnection) GetEdges() []GetAuthorWorksGetWorksByContributorContributorWorksConnectionEdgesContributorWorksEdge {
	return v.Edges
}

// GetPageInfo returns GetAuthorWorksGetWorksByContributorContributorWorksConnection.PageInfo, and is useful for accessing the field via an interface.
func (v *GetAuthorWorksGetWorksByContributorContributorWorksConnection) GetPageInfo() GetAuthorWorksGetWorksByContributorContributorWorksConnectionPageInfo {
	return v.PageInfo
}

// GetAuthorWorksGetWorksByContributorContributorWorksConnectionEdgesContributorWorksEdge includes the requested fields of the GraphQL type ContributorWorksEdge.
type GetAuthorWorksGetWorksByContributorContributorWorksConnectionEdgesContributorWorksEdge struct {
	Node GetAuthorWorksGetWorksByContributorContributorWorksConnectionEdgesContributorWorksEdgeNodeWork `json:"node"`
}

// GetNode returns GetAuthorWorksGetWorksByContributorContributorWorksConnectionEdgesContributorWorksEdge.Node, and is useful for accessing the field via an interface.
func (v *GetAuthorWorksGetWorksByContributorContributorWorksConnectionEdgesContributorWorksEdge) GetNode() GetAuthorWorksGetWorksByContributorContributorWorksConnectionEdgesContributorWorksEdgeNodeWork {
	return v.Node
}

// GetAuthorWorksGetWorksByContributorContributorWorksConnectionEdgesContributorWorksEdgeNodeWork includes the requested fields of the GraphQL type Work.
type GetAuthorWorksGetWorksByContributorContributorWorksConnectionEdgesContributorWorksEdgeNodeWork struct {
	Id       string                                                                                                 `json:"id"`
	BestBook GetAuthorWorksGetWorksByContributorContributorWorksConnectionEdgesContributorWorksEdgeNodeWorkBestBook `json:"bestBook"`
}

// GetId returns GetAuthorWorksGetWorksByContributorContributorWorksConnectionEdgesContributorWorksEdgeNodeWork.Id, and is useful for accessing the field via an interface.
func (v *GetAuthorWorksGetWorksByContributorContributorWorksConnectionEdgesContributorWorksEdgeNodeWork) GetId() string {
	return v.Id
}

// GetBestBook returns GetAuthorWorksGetWorksByContributorContributorWorksConnectionEdgesContributorWorksEdgeNodeWork.BestBook, and is useful for accessing the field via an interface.
func (v *GetAuthorWorksGetWorksByContributorContributorWorksConnectionEdgesContributorWorksEdgeNodeWork) GetBestBook() GetAuthorWorksGetWorksByContributorContributorWorksConnectionEdgesContributorWorksEdgeNodeWorkBestBook {
	return v.BestBook
}

// GetAuthorWorksGetWorksByContributorContributorWorksConnectionEdgesContributorWorksEdgeNodeWorkBestBook includes the requested fields of the GraphQL type Book.
type GetAuthorWorksGetWorksByContributorContributorWorksConnectionEdgesContributorWorksEdgeNodeWorkBestBook struct {
	LegacyId                  int64                                                                                                                                                `json:"legacyId"`
	PrimaryContributorEdge    GetAuthorWorksGetWorksByContributorContributorWorksConnectionEdgesContributorWorksEdgeNodeWorkBestBookPrimaryContributorEdgeBookContributorEdge      `json:"primaryContributorEdge"`
	SecondaryContributorEdges []GetAuthorWorksGetWorksByContributorContributorWorksConnectionEdgesContributorWorksEdgeNodeWorkBestBookSecondaryContributorEdgesBookContributorEdge `json:"secondaryContributorEdges"`
}

// GetLegacyId returns GetAuthorWorksGetWorksByContributorContributorWorksConnectionEdgesContributorWorksEdgeNodeWorkBestBook.LegacyId, and is useful for accessing the field via an interface.
func (v *GetAuthorWorksGetWorksByContributorContributorWorksConnectionEdgesContributorWorksEdgeNodeWorkBestBook) GetLegacyId() int64 {
	return v.LegacyId
}

// GetPrimaryContributorEdge returns GetAuthorWorksGetWorksByContributorContributorWorksConnectionEdgesContributorWorksEdgeNodeWorkBestBook.PrimaryContributorEdge, and is useful for accessing the field via an interface.
func (v *GetAuthorWorksGetWorksByContributorContributorWorksConnectionEdgesContributorWorksEdgeNodeWorkBestBook) GetPrimaryContributorEdge() GetAuthorWorksGetWorksByContributorContributorWorksConnectionEdgesContributorWorksEdgeNodeWorkBestBookPrimaryContributorEdgeBookContributorEdge {
	return v.PrimaryContributorEdge
}

// GetSecondaryContributorEdges returns GetAuthorWorksGetWorksByContributorContributorWorksConnectionEdgesContributorWorksEdgeNodeWorkBestBook.SecondaryContributorEdges, and is useful for accessing the field via an interface.
func (v *GetAuthorWorksGetWorksByContributorContributorWorksConnectionEdgesContributorWorksEdgeNodeWorkBestBook) GetSecondaryContributorEdges() []GetAuthorWorksGetWorksByContributorContributorWorksConnectionEdgesContributorWorksEdgeNodeWorkBestBookSecondaryContributorEdgesBookContributorEdge {
	return v.SecondaryContributorEdges
}

// GetAuthorWorksGetWorksByContributorContributorWorksConnectionEdgesContributorWorksEdgeNodeWorkBestBookPrimaryContributorEdgeBookContributorEdge includes the requested fields of the GraphQL type BookContributorEdge.
type GetAuthorWorksGetWorksByContributorContributorWorksConnectionEdgesContributorWorksEdgeNodeWorkBestBookPrimaryContributorEdgeBookContributorEdge struct {
	Role string                                                                                                                                                         `json:"role"`
	Node GetAuthorWorksGetWorksByContributorContributorWorksConnectionEdgesContributorWorksEdgeNodeWorkBestBookPrimaryContributorEdgeBookContributorEdgeNodeContributor `json:"node"`
}

// GetRole returns GetAuthorWorksGetWorksByContributorContributorWorksConnectionEdgesContributorWorksEdgeNodeWorkBestBookPrimaryContributorEdgeBookContributorEdge.Role, and is useful for accessing the field via an interface.
func (v *GetAuthorWorksGetWorksByContributorContributorWorksConnectionEdgesContributorWorksEdgeNodeWorkBestBookPrimaryContributorEdgeBookContributorEdge) GetRole() string {
	return v.Role
}

// GetNode returns GetAuthorWorksGetWorksByContributorContributorWorksConnectionEdgesContributorWorksEdgeNodeWorkBestBookPrimaryContributorEdgeBookContributorEdge.Node, and is useful for accessing the field via an interface.
func (v *GetAuthorWorksGetWorksByContributorContributorWorksConnectionEdgesContributorWorksEdgeNodeWorkBestBookPrimaryContributorEdgeBookContributorEdge) GetNode() GetAuthorWorksGetWorksByContributorContributorWorksConnectionEdgesContributorWorksEdgeNodeWorkBestBookPrimaryContributorEdgeBookContributorEdgeNodeContributor {
	return v.Node
}

// GetAuthorWorksGetWorksByContributorContributorWorksConnectionEdgesContributorWorksEdgeNodeWorkBestBookPrimaryContributorEdgeBookContributorEdgeNodeContributor includes the requested fields of the GraphQL type Contributor.
type GetAuthorWorksGetWorksByContributorContributorWorksConnectionEdgesContributorWorksEdgeNodeWorkBestBookPrimaryContributorEdgeBookContributorEdgeNodeContributor struct {
	LegacyId int64 `json:"legacyId"`
}

// GetLegacyId returns GetAuthorWorksGetWorksByContributorContributorWorksConnectionEdgesContributorWorksEdgeNodeWorkBestBookPrimaryContributorEdgeBookContributorEdgeNodeContributor.LegacyId, and is useful for accessing the field via an interface.
func (v *GetAuthorWorksGetWorksByContributorContributorWorksConnectionEdgesContributorWorksEdgeNodeWorkBestBookPrimaryContributorEdgeBookContributorEdgeNodeContributor) GetLegacyId() int64 {
	return v.LegacyId
}

// GetAuthorWorksGetWorksByContributorContributorWorksConnectionEdgesContributorWorksEdgeNodeWorkBestBookSecondaryContributorEdgesBookContributorEdge includes the requested fields of the GraphQL type BookContributorEdge.
type GetAuthorWorksGetWorksByContributorContributorWorksConnectionEdgesContributorWorksEdgeNodeWorkBestBookSecondaryContributorEdgesBookContributorEdge struct {
	Role string `json:"role"`
}

// GetRole returns GetAuthorWorksGetWorksByContributorContributorWorksConnectionEdgesContributorWorksEdgeNodeWorkBestBookSecondaryContributorEdgesBookContributorEdge.Role, and is useful for accessing the field via an interface.
func (v *GetAuthorWorksGetWorksByContributorContributorWorksConnectionEdgesContributorWorksEdgeNodeWorkBestBookSecondaryContributorEdgesBookContributorEdge) GetRole() string {
	return v.Role
}

// GetAuthorWorksGetWorksByContributorContributorWorksConnectionPageInfo includes the requested fields of the GraphQL type PageInfo.
type GetAuthorWorksGetWorksByContributorContributorWorksConnectionPageInfo struct {
	HasNextPage   bool   `json:"hasNextPage"`
	NextPageToken string `json:"nextPageToken"`
}

// GetHasNextPage returns GetAuthorWorksGetWorksByContributorContributorWorksConnectionPageInfo.HasNextPage, and is useful for accessing the field via an interface.
func (v *GetAuthorWorksGetWorksByContributorContributorWorksConnectionPageInfo) GetHasNextPage() bool {
	return v.HasNextPage
}

// GetNextPageToken returns GetAuthorWorksGetWorksByContributorContributorWorksConnectionPageInfo.NextPageToken, and is useful for accessing the field via an interface.
func (v *GetAuthorWorksGetWorksByContributorContributorWorksConnectionPageInfo) GetNextPageToken() string {
	return v.NextPageToken
}

// GetAuthorWorksResponse is returned by GetAuthorWorks on success.
type GetAuthorWorksResponse struct {
	GetWorksByContributor GetAuthorWorksGetWorksByContributorContributorWorksConnection `json:"getWorksByContributor"`
}

// GetGetWorksByContributor returns GetAuthorWorksResponse.GetWorksByContributor, and is useful for accessing the field via an interface.
func (v *GetAuthorWorksResponse) GetGetWorksByContributor() GetAuthorWorksGetWorksByContributorContributorWorksConnection {
	return v.GetWorksByContributor
}

// GetBookGetBookByLegacyIdBook includes the requested fields of the GraphQL type Book.
type GetBookGetBookByLegacyIdBook struct {
	BookInfo `json:"-"`
	Work     GetBookGetBookByLegacyIdBookWork `json:"work"`
}

// GetWork returns GetBookGetBookByLegacyIdBook.Work, and is useful for accessing the field via an interface.
func (v *GetBookGetBookByLegacyIdBook) GetWork() GetBookGetBookByLegacyIdBookWork { return v.Work }

// GetId returns GetBookGetBookByLegacyIdBook.Id, and is useful for accessing the field via an interface.
func (v *GetBookGetBookByLegacyIdBook) GetId() string { return v.BookInfo.Id }

// GetLegacyId returns GetBookGetBookByLegacyIdBook.LegacyId, and is useful for accessing the field via an interface.
func (v *GetBookGetBookByLegacyIdBook) GetLegacyId() int64 { return v.BookInfo.LegacyId }

// GetDescription returns GetBookGetBookByLegacyIdBook.Description, and is useful for accessing the field via an interface.
func (v *GetBookGetBookByLegacyIdBook) GetDescription() string { return v.BookInfo.Description }

// GetBookGenres returns GetBookGetBookByLegacyIdBook.BookGenres, and is useful for accessing the field via an interface.
func (v *GetBookGetBookByLegacyIdBook) GetBookGenres() []BookInfoBookGenresBookGenre {
	return v.BookInfo.BookGenres
}

// GetBookSeries returns GetBookGetBookByLegacyIdBook.BookSeries, and is useful for accessing the field via an interface.
func (v *GetBookGetBookByLegacyIdBook) GetBookSeries() []BookInfoBookSeries {
	return v.BookInfo.BookSeries
}

// GetDetails returns GetBookGetBookByLegacyIdBook.Details, and is useful for accessing the field via an interface.
func (v *GetBookGetBookByLegacyIdBook) GetDetails() BookInfoDetailsBookDetails {
	return v.BookInfo.Details
}

// GetImageUrl returns GetBookGetBookByLegacyIdBook.ImageUrl, and is useful for accessing the field via an interface.
func (v *GetBookGetBookByLegacyIdBook) GetImageUrl() string { return v.BookInfo.ImageUrl }

// GetPrimaryContributorEdge returns GetBookGetBookByLegacyIdBook.PrimaryContributorEdge, and is useful for accessing the field via an interface.
func (v *GetBookGetBookByLegacyIdBook) GetPrimaryContributorEdge() BookInfoPrimaryContributorEdgeBookContributorEdge {
	return v.BookInfo.PrimaryContributorEdge
}

// GetStats returns GetBookGetBookByLegacyIdBook.Stats, and is useful for accessing the field via an interface.
func (v *GetBookGetBookByLegacyIdBook) GetStats() BookInfoStatsBookOrWorkStats {
	return v.BookInfo.Stats
}

// GetTitle returns GetBookGetBookByLegacyIdBook.Title, and is useful for accessing the field via an interface.
func (v *GetBookGetBookByLegacyIdBook) GetTitle() string { return v.BookInfo.Title }

// GetTitlePrimary returns GetBookGetBookByLegacyIdBook.TitlePrimary, and is useful for accessing the field via an interface.
func (v *GetBookGetBookByLegacyIdBook) GetTitlePrimary() string { return v.BookInfo.TitlePrimary }

// GetWebUrl returns GetBookGetBookByLegacyIdBook.WebUrl, and is useful for accessing the field via an interface.
func (v *GetBookGetBookByLegacyIdBook) GetWebUrl() string { return v.BookInfo.WebUrl }

func (v *GetBookGetBookByLegacyIdBook) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*GetBookGetBookByLegacyIdBook
		graphql.NoUnmarshalJSON
	}
	firstPass.GetBookGetBookByLegacyIdBook = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	err = json.Unmarshal(
		b, &v.BookInfo)
	if err != nil {
		return err
	}
	return nil
}

type __premarshalGetBookGetBookByLegacyIdBook struct {
	Work GetBookGetBookByLegacyIdBookWork `json:"work"`

	Id string `json:"id"`

	LegacyId int64 `json:"legacyId"`

	Description string `json:"description"`

	BookGenres []BookInfoBookGenresBookGenre `json:"bookGenres"`

	BookSeries []BookInfoBookSeries `json:"bookSeries"`

	Details BookInfoDetailsBookDetails `json:"details"`

	ImageUrl string `json:"imageUrl"`

	PrimaryContributorEdge BookInfoPrimaryContributorEdgeBookContributorEdge `json:"primaryContributorEdge"`

	Stats BookInfoStatsBookOrWorkStats `json:"stats"`

	Title string `json:"title"`

	TitlePrimary string `json:"titlePrimary"`

	WebUrl string `json:"webUrl"`
}

func (v *GetBookGetBookByLegacyIdBook) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *GetBookGetBookByLegacyIdBook) __premarshalJSON() (*__premarshalGetBookGetBookByLegacyIdBook, error) {
	var retval __premarshalGetBookGetBookByLegacyIdBook

	retval.Work = v.Work
	retval.Id = v.BookInfo.Id
	retval.LegacyId = v.BookInfo.LegacyId
	retval.Description = v.BookInfo.Description
	retval.BookGenres = v.BookInfo.BookGenres
	retval.BookSeries = v.BookInfo.BookSeries
	retval.Details = v.BookInfo.Details
	retval.ImageUrl = v.BookInfo.ImageUrl
	retval.PrimaryContributorEdge = v.BookInfo.PrimaryContributorEdge
	retval.Stats = v.BookInfo.Stats
	retval.Title = v.BookInfo.Title
	retval.TitlePrimary = v.BookInfo.TitlePrimary
	retval.WebUrl = v.BookInfo.WebUrl
	return &retval, nil
}

// GetBookGetBookByLegacyIdBookWork includes the requested fields of the GraphQL type Work.
type GetBookGetBookByLegacyIdBookWork struct {
	Id       string                                                  `json:"id"`
	LegacyId int64                                                   `json:"legacyId"`
	Details  GetBookGetBookByLegacyIdBookWorkDetails                 `json:"details"`
	BestBook GetBookGetBookByLegacyIdBookWorkBestBook                `json:"bestBook"`
	Editions GetBookGetBookByLegacyIdBookWorkEditionsBooksConnection `json:"editions"`
}

// GetId returns GetBookGetBookByLegacyIdBookWork.Id, and is useful for accessing the field via an interface.
func (v *GetBookGetBookByLegacyIdBookWork) GetId() string { return v.Id }

// GetLegacyId returns GetBookGetBookByLegacyIdBookWork.LegacyId, and is useful for accessing the field via an interface.
func (v *GetBookGetBookByLegacyIdBookWork) GetLegacyId() int64 { return v.LegacyId }

// GetDetails returns GetBookGetBookByLegacyIdBookWork.Details, and is useful for accessing the field via an interface.
func (v *GetBookGetBookByLegacyIdBookWork) GetDetails() GetBookGetBookByLegacyIdBookWorkDetails {
	return v.Details
}

// GetBestBook returns GetBookGetBookByLegacyIdBookWork.BestBook, and is useful for accessing the field via an interface.
func (v *GetBookGetBookByLegacyIdBookWork) GetBestBook() GetBookGetBookByLegacyIdBookWorkBestBook {
	return v.BestBook
}

// GetEditions returns GetBookGetBookByLegacyIdBookWork.Editions, and is useful for accessing the field via an interface.
func (v *GetBookGetBookByLegacyIdBookWork) GetEditions() GetBookGetBookByLegacyIdBookWorkEditionsBooksConnection {
	return v.Editions
}

// GetBookGetBookByLegacyIdBookWorkBestBook includes the requested fields of the GraphQL type Book.
type GetBookGetBookByLegacyIdBookWorkBestBook struct {
	LegacyId               int64                                                                             `json:"legacyId"`
	Title                  string                                                                            `json:"title"`
	TitlePrimary           string                                                                            `json:"titlePrimary"`
	PrimaryContributorEdge GetBookGetBookByLegacyIdBookWorkBestBookPrimaryContributorEdgeBookContributorEdge `json:"primaryContributorEdge"`
}

// GetLegacyId returns GetBookGetBookByLegacyIdBookWorkBestBook.LegacyId, and is useful for accessing the field via an interface.
func (v *GetBookGetBookByLegacyIdBookWorkBestBook) GetLegacyId() int64 { return v.LegacyId }

// GetTitle returns GetBookGetBookByLegacyIdBookWorkBestBook.Title, and is useful for accessing the field via an interface.
func (v *GetBookGetBookByLegacyIdBookWorkBestBook) GetTitle() string { return v.Title }

// GetTitlePrimary returns GetBookGetBookByLegacyIdBookWorkBestBook.TitlePrimary, and is useful for accessing the field via an interface.
func (v *GetBookGetBookByLegacyIdBookWorkBestBook) GetTitlePrimary() string { return v.TitlePrimary }

// GetPrimaryContributorEdge returns GetBookGetBookByLegacyIdBookWorkBestBook.PrimaryContributorEdge, and is useful for accessing the field via an interface.
func (v *GetBookGetBookByLegacyIdBookWorkBestBook) GetPrimaryContributorEdge() GetBookGetBookByLegacyIdBookWorkBestBookPrimaryContributorEdgeBookContributorEdge {
	return v.PrimaryContributorEdge
}

// GetBookGetBookByLegacyIdBookWorkBestBookPrimaryContributorEdgeBookContributorEdge includes the requested fields of the GraphQL type BookContributorEdge.
type GetBookGetBookByLegacyIdBookWorkBestBookPrimaryContributorEdgeBookContributorEdge struct {
	Role string                                                                                           `json:"role"`
	Node GetBookGetBookByLegacyIdBookWorkBestBookPrimaryContributorEdgeBookContributorEdgeNodeContributor `json:"node"`
}

// GetRole returns GetBookGetBookByLegacyIdBookWorkBestBookPrimaryContributorEdgeBookContributorEdge.Role, and is useful for accessing the field via an interface.
func (v *GetBookGetBookByLegacyIdBookWorkBestBookPrimaryContributorEdgeBookContributorEdge) GetRole() string {
	return v.Role
}

// GetNode returns GetBookGetBookByLegacyIdBookWorkBestBookPrimaryContributorEdgeBookContributorEdge.Node, and is useful for accessing the field via an interface.
func (v *GetBookGetBookByLegacyIdBookWorkBestBookPrimaryContributorEdgeBookContributorEdge) GetNode() GetBookGetBookByLegacyIdBookWorkBestBookPrimaryContributorEdgeBookContributorEdgeNodeContributor {
	return v.Node
}

// GetBookGetBookByLegacyIdBookWorkBestBookPrimaryContributorEdgeBookContributorEdgeNodeContributor includes the requested fields of the GraphQL type Contributor.
type GetBookGetBookByLegacyIdBookWorkBestBookPrimaryContributorEdgeBookContributorEdgeNodeContributor struct {
	LegacyId int64 `json:"legacyId"`
}

// GetLegacyId returns GetBookGetBookByLegacyIdBookWorkBestBookPrimaryContributorEdgeBookContributorEdgeNodeContributor.LegacyId, and is useful for accessing the field via an interface.
func (v *GetBookGetBookByLegacyIdBookWorkBestBookPrimaryContributorEdgeBookContributorEdgeNodeContributor) GetLegacyId() int64 {
	return v.LegacyId
}

// GetBookGetBookByLegacyIdBookWorkDetails includes the requested fields of the GraphQL type WorkDetails.
type GetBookGetBookByLegacyIdBookWorkDetails struct {
	WebUrl          string  `json:"webUrl"`
	PublicationTime float64 `json:"publicationTime"`
}

// GetWebUrl returns GetBookGetBookByLegacyIdBookWorkDetails.WebUrl, and is useful for accessing the field via an interface.
func (v *GetBookGetBookByLegacyIdBookWorkDetails) GetWebUrl() string { return v.WebUrl }

// GetPublicationTime returns GetBookGetBookByLegacyIdBookWorkDetails.PublicationTime, and is useful for accessing the field via an interface.
func (v *GetBookGetBookByLegacyIdBookWorkDetails) GetPublicationTime() float64 {
	return v.PublicationTime
}

// GetBookGetBookByLegacyIdBookWorkEditionsBooksConnection includes the requested fields of the GraphQL type BooksConnection.
type GetBookGetBookByLegacyIdBookWorkEditionsBooksConnection struct {
	Edges []GetBookGetBookByLegacyIdBookWorkEditionsBooksConnectionEdgesBooksEdge `json:"edges"`
}

// GetEdges returns GetBookGetBookByLegacyIdBookWorkEditionsBooksConnection.Edges, and is useful for accessing the field via an interface.
func (v *GetBookGetBookByLegacyIdBookWorkEditionsBooksConnection) GetEdges() []GetBookGetBookByLegacyIdBookWorkEditionsBooksConnectionEdgesBooksEdge {
	return v.Edges
}

// GetBookGetBookByLegacyIdBookWorkEditionsBooksConnectionEdgesBooksEdge includes the requested fields of the GraphQL type BooksEdge.
type GetBookGetBookByLegacyIdBookWorkEditionsBooksConnectionEdgesBooksEdge struct {
	Node GetBookGetBookByLegacyIdBookWorkEditionsBooksConnectionEdgesBooksEdgeNodeBook `json:"node"`
}

// GetNode returns GetBookGetBookByLegacyIdBookWorkEditionsBooksConnectionEdgesBooksEdge.Node, and is useful for accessing the field via an interface.
func (v *GetBookGetBookByLegacyIdBookWorkEditionsBooksConnectionEdgesBooksEdge) GetNode() GetBookGetBookByLegacyIdBookWorkEditionsBooksConnectionEdgesBooksEdgeNodeBook {
	return v.Node
}

// GetBookGetBookByLegacyIdBookWorkEditionsBooksConnectionEdgesBooksEdgeNodeBook includes the requested fields of the GraphQL type Book.
type GetBookGetBookByLegacyIdBookWorkEditionsBooksConnectionEdgesBooksEdgeNodeBook struct {
	BookInfo `json:"-"`
}

// GetId returns GetBookGetBookByLegacyIdBookWorkEditionsBooksConnectionEdgesBooksEdgeNodeBook.Id, and is useful for accessing the field via an interface.
func (v *GetBookGetBookByLegacyIdBookWorkEditionsBooksConnectionEdgesBooksEdgeNodeBook) GetId() string {
	return v.BookInfo.Id
}

// GetLegacyId returns GetBookGetBookByLegacyIdBookWorkEditionsBooksConnectionEdgesBooksEdgeNodeBook.LegacyId, and is useful for accessing the field via an interface.
func (v *GetBookGetBookByLegacyIdBookWorkEditionsBooksConnectionEdgesBooksEdgeNodeBook) GetLegacyId() int64 {
	return v.BookInfo.LegacyId
}

// GetDescription returns GetBookGetBookByLegacyIdBookWorkEditionsBooksConnectionEdgesBooksEdgeNodeBook.Description, and is useful for accessing the field via an interface.
func (v *GetBookGetBookByLegacyIdBookWorkEditionsBooksConnectionEdgesBooksEdgeNodeBook) GetDescription() string {
	return v.BookInfo.Description
}

// GetBookGenres returns GetBookGetBookByLegacyIdBookWorkEditionsBooksConnectionEdgesBooksEdgeNodeBook.BookGenres, and is useful for accessing the field via an interface.
func (v *GetBookGetBookByLegacyIdBookWorkEditionsBooksConnectionEdgesBooksEdgeNodeBook) GetBookGenres() []BookInfoBookGenresBookGenre {
	return v.BookInfo.BookGenres
}

// GetBookSeries returns GetBookGetBookByLegacyIdBookWorkEditionsBooksConnectionEdgesBooksEdgeNodeBook.BookSeries, and is useful for accessing the field via an interface.
func (v *GetBookGetBookByLegacyIdBookWorkEditionsBooksConnectionEdgesBooksEdgeNodeBook) GetBookSeries() []BookInfoBookSeries {
	return v.BookInfo.BookSeries
}

// GetDetails returns GetBookGetBookByLegacyIdBookWorkEditionsBooksConnectionEdgesBooksEdgeNodeBook.Details, and is useful for accessing the field via an interface.
func (v *GetBookGetBookByLegacyIdBookWorkEditionsBooksConnectionEdgesBooksEdgeNodeBook) GetDetails() BookInfoDetailsBookDetails {
	return v.BookInfo.Details
}

// GetImageUrl returns GetBookGetBookByLegacyIdBookWorkEditionsBooksConnectionEdgesBooksEdgeNodeBook.ImageUrl, and is useful for accessing the field via an interface.
func (v *GetBookGetBookByLegacyIdBookWorkEditionsBooksConnectionEdgesBooksEdgeNodeBook) GetImageUrl() string {
	return v.BookInfo.ImageUrl
}

// GetPrimaryContributorEdge returns GetBookGetBookByLegacyIdBookWorkEditionsBooksConnectionEdgesBooksEdgeNodeBook.PrimaryContributorEdge, and is useful for accessing the field via an interface.
func (v *GetBookGetBookByLegacyIdBookWorkEditionsBooksConnectionEdgesBooksEdgeNodeBook) GetPrimaryContributorEdge() BookInfoPrimaryContributorEdgeBookContributorEdge {
	return v.BookInfo.PrimaryContributorEdge
}

// GetStats returns GetBookGetBookByLegacyIdBookWorkEditionsBooksConnectionEdgesBooksEdgeNodeBook.Stats, and is useful for accessing the field via an interface.
func (v *GetBookGetBookByLegacyIdBookWorkEditionsBooksConnectionEdgesBooksEdgeNodeBook) GetStats() BookInfoStatsBookOrWorkStats {
	return v.BookInfo.Stats
}

// GetTitle returns GetBookGetBookByLegacyIdBookWorkEditionsBooksConnectionEdgesBooksEdgeNodeBook.Title, and is useful for accessing the field via an interface.
func (v *GetBookGetBookByLegacyIdBookWorkEditionsBooksConnectionEdgesBooksEdgeNodeBook) GetTitle() string {
	return v.BookInfo.Title
}

// GetTitlePrimary returns GetBookGetBookByLegacyIdBookWorkEditionsBooksConnectionEdgesBooksEdgeNodeBook.TitlePrimary, and is useful for accessing the field via an interface.
func (v *GetBookGetBookByLegacyIdBookWorkEditionsBooksConnectionEdgesBooksEdgeNodeBook) GetTitlePrimary() string {
	return v.BookInfo.TitlePrimary
}

// GetWebUrl returns GetBookGetBookByLegacyIdBookWorkEditionsBooksConnectionEdgesBooksEdgeNodeBook.WebUrl, and is useful for accessing the field via an interface.
func (v *GetBookGetBookByLegacyIdBookWorkEditionsBooksConnectionEdgesBooksEdgeNodeBook) GetWebUrl() string {
	return v.BookInfo.WebUrl
}

func (v *GetBookGetBookByLegacyIdBookWorkEditionsBooksConnectionEdgesBooksEdgeNodeBook) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*GetBookGetBookByLegacyIdBookWorkEditionsBooksConnectionEdgesBooksEdgeNodeBook
		graphql.NoUnmarshalJSON
	}
	firstPass.GetBookGetBookByLegacyIdBookWorkEditionsBooksConnectionEdgesBooksEdgeNodeBook = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	err = json.Unmarshal(
		b, &v.BookInfo)
	if err != nil {
		return err
	}
	return nil
}

type __premarshalGetBookGetBookByLegacyIdBookWorkEditionsBooksConnectionEdgesBooksEdgeNodeBook struct {
	Id string `json:"id"`

	LegacyId int64 `json:"legacyId"`

	Description string `json:"description"`

	BookGenres []BookInfoBookGenresBookGenre `json:"bookGenres"`

	BookSeries []BookInfoBookSeries `json:"bookSeries"`

	Details BookInfoDetailsBookDetails `json:"details"`

	ImageUrl string `json:"imageUrl"`

	PrimaryContributorEdge BookInfoPrimaryContributorEdgeBookContributorEdge `json:"primaryContributorEdge"`

	Stats BookInfoStatsBookOrWorkStats `json:"stats"`

	Title string `json:"title"`

	TitlePrimary string `json:"titlePrimary"`

	WebUrl string `json:"webUrl"`
}

func (v *GetBookGetBookByLegacyIdBookWorkEditionsBooksConnectionEdgesBooksEdgeNodeBook) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *GetBookGetBookByLegacyIdBookWorkEditionsBooksConnectionEdgesBooksEdgeNodeBook) __premarshalJSON() (*__premarshalGetBookGetBookByLegacyIdBookWorkEditionsBooksConnectionEdgesBooksEdgeNodeBook, error) {
	var retval __premarshalGetBookGetBookByLegacyIdBookWorkEditionsBooksConnectionEdgesBooksEdgeNodeBook

	retval.Id = v.BookInfo.Id
	retval.LegacyId = v.BookInfo.LegacyId
	retval.Description = v.BookInfo.Description
	retval.BookGenres = v.BookInfo.BookGenres
	retval.BookSeries = v.BookInfo.BookSeries
	retval.Details = v.BookInfo.Details
	retval.ImageUrl = v.BookInfo.ImageUrl
	retval.PrimaryContributorEdge = v.BookInfo.PrimaryContributorEdge
	retval.Stats = v.BookInfo.Stats
	retval.Title = v.BookInfo.Title
	retval.TitlePrimary = v.BookInfo.TitlePrimary
	retval.WebUrl = v.BookInfo.WebUrl
	return &retval, nil
}

// GetBookResponse is returned by GetBook on success.
type GetBookResponse struct {
	GetBookByLegacyId GetBookGetBookByLegacyIdBook `json:"getBookByLegacyId"`
}

// GetGetBookByLegacyId returns GetBookResponse.GetBookByLegacyId, and is useful for accessing the field via an interface.
func (v *GetBookResponse) GetGetBookByLegacyId() GetBookGetBookByLegacyIdBook {
	return v.GetBookByLegacyId
}

// GetEditionsGetEditionsBooksConnection includes the requested fields of the GraphQL type BooksConnection.
type GetEditionsGetEditionsBooksConnection struct {
	Edges    []GetEditionsGetEditionsBooksConnectionEdgesBooksEdge `json:"edges"`
	PageInfo GetEditionsGetEditionsBooksConnectionPageInfo         `json:"pageInfo"`
}

// GetEdges returns GetEditionsGetEditionsBooksConnection.Edges, and is useful for accessing the field via an interface.
func (v *GetEditionsGetEditionsBooksConnection) GetEdges() []GetEditionsGetEditionsBooksConnectionEdgesBooksEdge {
	return v.Edges
}

// GetPageInfo returns GetEditionsGetEditionsBooksConnection.PageInfo, and is useful for accessing the field via an interface.
func (v *GetEditionsGetEditionsBooksConnection) GetPageInfo() GetEditionsGetEditionsBooksConnectionPageInfo {
	return v.PageInfo
}

// GetEditionsGetEditionsBooksConnectionEdgesBooksEdge includes the requested fields of the GraphQL type BooksEdge.
type GetEditionsGetEditionsBooksConnectionEdgesBooksEdge struct {
	Node GetEditionsGetEditionsBooksConnectionEdgesBooksEdgeNodeBook `json:"node"`
}

// GetNode returns GetEditionsGetEditionsBooksConnectionEdgesBooksEdge.Node, and is useful for accessing the field via an interface.
func (v *GetEditionsGetEditionsBooksConnectionEdgesBooksEdge) GetNode() GetEditionsGetEditionsBooksConnectionEdgesBooksEdgeNodeBook {
	return v.Node
}

// GetEditionsGetEditionsBooksConnectionEdgesBooksEdgeNodeBook includes the requested fields of the GraphQL type Book.
type GetEditionsGetEditionsBooksConnectionEdgesBooksEdgeNodeBook struct {
	Id       string `json:"id"`
	LegacyId int64  `json:"legacyId"`
}

// GetId returns GetEditionsGetEditionsBooksConnectionEdgesBooksEdgeNodeBook.Id, and is useful for accessing the field via an interface.
func (v *GetEditionsGetEditionsBooksConnectionEdgesBooksEdgeNodeBook) GetId() string { return v.Id }

// GetLegacyId returns GetEditionsGetEditionsBooksConnectionEdgesBooksEdgeNodeBook.LegacyId, and is useful for accessing the field via an interface.
func (v *GetEditionsGetEditionsBooksConnectionEdgesBooksEdgeNodeBook) GetLegacyId() int64 {
	return v.LegacyId
}

// GetEditionsGetEditionsBooksConnectionPageInfo includes the requested fields of the GraphQL type PageInfo.
type GetEditionsGetEditionsBooksConnectionPageInfo struct {
	HasNextPage   bool   `json:"hasNextPage"`
	NextPageToken string `json:"nextPageToken"`
}

// GetHasNextPage returns GetEditionsGetEditionsBooksConnectionPageInfo.HasNextPage, and is useful for accessing the field via an interface.
func (v *GetEditionsGetEditionsBooksConnectionPageInfo) GetHasNextPage() bool { return v.HasNextPage }

// GetNextPageToken returns GetEditionsGetEditionsBooksConnectionPageInfo.NextPageToken, and is useful for accessing the field via an interface.
func (v *GetEditionsGetEditionsBooksConnectionPageInfo) GetNextPageToken() string {
	return v.NextPageToken
}

// GetEditionsResponse is returned by GetEditions on success.
type GetEditionsResponse struct {
	GetEditions GetEditionsGetEditionsBooksConnection `json:"getEditions"`
}

// GetGetEditions returns GetEditionsResponse.GetEditions, and is useful for accessing the field via an interface.
func (v *GetEditionsResponse) GetGetEditions() GetEditionsGetEditionsBooksConnection {
	return v.GetEditions
}

// GetSeriesGetWorksForSeriesSeriesWorksConnection includes the requested fields of the GraphQL type SeriesWorksConnection.
type GetSeriesGetWorksForSeriesSeriesWorksConnection struct {
	Edges []GetSeriesGetWorksForSeriesSeriesWorksConnectionEdgesSeriesWorksEdge `json:"edges"`
}

// GetEdges returns GetSeriesGetWorksForSeriesSeriesWorksConnection.Edges, and is useful for accessing the field via an interface.
func (v *GetSeriesGetWorksForSeriesSeriesWorksConnection) GetEdges() []GetSeriesGetWorksForSeriesSeriesWorksConnectionEdgesSeriesWorksEdge {
	return v.Edges
}

// GetSeriesGetWorksForSeriesSeriesWorksConnectionEdgesSeriesWorksEdge includes the requested fields of the GraphQL type SeriesWorksEdge.
type GetSeriesGetWorksForSeriesSeriesWorksConnectionEdgesSeriesWorksEdge struct {
	IsPrimary       bool                                                                        `json:"isPrimary"`
	SeriesPlacement string                                                                      `json:"seriesPlacement"`
	Node            GetSeriesGetWorksForSeriesSeriesWorksConnectionEdgesSeriesWorksEdgeNodeWork `json:"node"`
}

// GetIsPrimary returns GetSeriesGetWorksForSeriesSeriesWorksConnectionEdgesSeriesWorksEdge.IsPrimary, and is useful for accessing the field via an interface.
func (v *GetSeriesGetWorksForSeriesSeriesWorksConnectionEdgesSeriesWorksEdge) GetIsPrimary() bool {
	return v.IsPrimary
}

// GetSeriesPlacement returns GetSeriesGetWorksForSeriesSeriesWorksConnectionEdgesSeriesWorksEdge.SeriesPlacement, and is useful for accessing the field via an interface.
func (v *GetSeriesGetWorksForSeriesSeriesWorksConnectionEdgesSeriesWorksEdge) GetSeriesPlacement() string {
	return v.SeriesPlacement
}

// GetNode returns GetSeriesGetWorksForSeriesSeriesWorksConnectionEdgesSeriesWorksEdge.Node, and is useful for accessing the field via an interface.
func (v *GetSeriesGetWorksForSeriesSeriesWorksConnectionEdgesSeriesWorksEdge) GetNode() GetSeriesGetWorksForSeriesSeriesWorksConnectionEdgesSeriesWorksEdgeNodeWork {
	return v.Node
}

// GetSeriesGetWorksForSeriesSeriesWorksConnectionEdgesSeriesWorksEdgeNodeWork includes the requested fields of the GraphQL type Work.
type GetSeriesGetWorksForSeriesSeriesWorksConnectionEdgesSeriesWorksEdgeNodeWork struct {
	LegacyId int64 `json:"legacyId"`
}

// GetLegacyId returns GetSeriesGetWorksForSeriesSeriesWorksConnectionEdgesSeriesWorksEdgeNodeWork.LegacyId, and is useful for accessing the field via an interface.
func (v *GetSeriesGetWorksForSeriesSeriesWorksConnectionEdgesSeriesWorksEdgeNodeWork) GetLegacyId() int64 {
	return v.LegacyId
}

// GetSeriesResponse is returned by GetSeries on success.
type GetSeriesResponse struct {
	GetWorksForSeries GetSeriesGetWorksForSeriesSeriesWorksConnection `json:"getWorksForSeries"`
}

// GetGetWorksForSeries returns GetSeriesResponse.GetWorksForSeries, and is useful for accessing the field via an interface.
func (v *GetSeriesResponse) GetGetWorksForSeries() GetSeriesGetWorksForSeriesSeriesWorksConnection {
	return v.GetWorksForSeries
}

type GetWorksByContributorInput struct {
	Id string `json:"id"`
}

// GetId returns GetWorksByContributorInput.Id, and is useful for accessing the field via an interface.
func (v *GetWorksByContributorInput) GetId() string { return v.Id }

type PaginationInput struct {
	After  string `json:"after"`
	Before string `json:"before"`
	Limit  int64  `json:"limit"`
}

// GetAfter returns PaginationInput.After, and is useful for accessing the field via an interface.
func (v *PaginationInput) GetAfter() string { return v.After }

// GetBefore returns PaginationInput.Before, and is useful for accessing the field via an interface.
func (v *PaginationInput) GetBefore() string { return v.Before }

// GetLimit returns PaginationInput.Limit, and is useful for accessing the field via an interface.
func (v *PaginationInput) GetLimit() int64 { return v.Limit }

// SearchGetSearchSuggestionsSearchResultsConnection includes the requested fields of the GraphQL type SearchResultsConnection.
type SearchGetSearchSuggestionsSearchResultsConnection struct {
	TotalCount int64                                                                    `json:"totalCount"`
	Edges      []SearchGetSearchSuggestionsSearchResultsConnectionEdgesSearchResultEdge `json:"-"`
}

// GetTotalCount returns SearchGetSearchSuggestionsSearchResultsConnection.TotalCount, and is useful for accessing the field via an interface.
func (v *SearchGetSearchSuggestionsSearchResultsConnection) GetTotalCount() int64 {
	return v.TotalCount
}

// GetEdges returns SearchGetSearchSuggestionsSearchResultsConnection.Edges, and is useful for accessing the field via an interface.
func (v *SearchGetSearchSuggestionsSearchResultsConnection) GetEdges() []SearchGetSearchSuggestionsSearchResultsConnectionEdgesSearchResultEdge {
	return v.Edges
}

func (v *SearchGetSearchSuggestionsSearchResultsConnection) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*SearchGetSearchSuggestionsSearchResultsConnection
		Edges []json.RawMessage `json:"edges"`
		graphql.NoUnmarshalJSON
	}
	firstPass.SearchGetSearchSuggestionsSearchResultsConnection = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	{
		dst := &v.Edges
		src := firstPass.Edges
		*dst = make(
			[]SearchGetSearchSuggestionsSearchResultsConnectionEdgesSearchResultEdge,
			len(src))
		for i, src := range src {
			dst := &(*dst)[i]
			if len(src) != 0 && string(src) != "null" {
				err = __unmarshalSearchGetSearchSuggestionsSearchResultsConnectionEdgesSearchResultEdge(
					src, dst)
				if err != nil {
					return fmt.Errorf(
						"unable to unmarshal SearchGetSearchSuggestionsSearchResultsConnection.Edges: %w", err)
				}
			}
		}
	}
	return nil
}

type __premarshalSearchGetSearchSuggestionsSearchResultsConnection struct {
	TotalCount int64 `json:"totalCount"`

	Edges []json.RawMessage `json:"edges"`
}

func (v *SearchGetSearchSuggestionsSearchResultsConnection) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *SearchGetSearchSuggestionsSearchResultsConnection) __premarshalJSON() (*__premarshalSearchGetSearchSuggestionsSearchResultsConnection, error) {
	var retval __premarshalSearchGetSearchSuggestionsSearchResultsConnection

	retval.TotalCount = v.TotalCount
	{

		dst := &retval.Edges
		src := v.Edges
		*dst = make(
			[]json.RawMessage,
			len(src))
		for i, src := range src {
			dst := &(*dst)[i]
			var err error
			*dst, err = __marshalSearchGetSearchSuggestionsSearchResultsConnectionEdgesSearchResultEdge(
				&src)
			if err != nil {
				return nil, fmt.Errorf(
					"unable to marshal SearchGetSearchSuggestionsSearchResultsConnection.Edges: %w", err)
			}
		}
	}
	return &retval, nil
}

// SearchGetSearchSuggestionsSearchResultsConnectionEdgesSearchBookEdge includes the requested fields of the GraphQL type SearchBookEdge.
type SearchGetSearchSuggestionsSearchResultsConnectionEdgesSearchBookEdge struct {
	Typename string                                                                       `json:"__typename"`
	Node     SearchGetSearchSuggestionsSearchResultsConnectionEdgesSearchBookEdgeNodeBook `json:"node"`
}

// GetTypename returns SearchGetSearchSuggestionsSearchResultsConnectionEdgesSearchBookEdge.Typename, and is useful for accessing the field via an interface.
func (v *SearchGetSearchSuggestionsSearchResultsConnectionEdgesSearchBookEdge) GetTypename() string {
	return v.Typename
}

// GetNode returns SearchGetSearchSuggestionsSearchResultsConnectionEdgesSearchBookEdge.Node, and is useful for accessing the field via an interface.
func (v *SearchGetSearchSuggestionsSearchResultsConnectionEdgesSearchBookEdge) GetNode() SearchGetSearchSuggestionsSearchResultsConnectionEdgesSearchBookEdgeNodeBook {
	return v.Node
}

// SearchGetSearchSuggestionsSearchResultsConnectionEdgesSearchBookEdgeNodeBook includes the requested fields of the GraphQL type Book.
type SearchGetSearchSuggestionsSearchResultsConnectionEdgesSearchBookEdgeNodeBook struct {
	Work     SearchGetSearchSuggestionsSearchResultsConnectionEdgesSearchBookEdgeNodeBookWork `json:"work"`
	Title    string                                                                           `json:"title"`
	LegacyId int64                                                                            `json:"legacyId"`
}

// GetWork returns SearchGetSearchSuggestionsSearchResultsConnectionEdgesSearchBookEdgeNodeBook.Work, and is useful for accessing the field via an interface.
func (v *SearchGetSearchSuggestionsSearchResultsConnectionEdgesSearchBookEdgeNodeBook) GetWork() SearchGetSearchSuggestionsSearchResultsConnectionEdgesSearchBookEdgeNodeBookWork {
	return v.Work
}

// GetTitle returns SearchGetSearchSuggestionsSearchResultsConnectionEdgesSearchBookEdgeNodeBook.Title, and is useful for accessing the field via an interface.
func (v *SearchGetSearchSuggestionsSearchResultsConnectionEdgesSearchBookEdgeNodeBook) GetTitle() string {
	return v.Title
}

// GetLegacyId returns SearchGetSearchSuggestionsSearchResultsConnectionEdgesSearchBookEdgeNodeBook.LegacyId, and is useful for accessing the field via an interface.
func (v *SearchGetSearchSuggestionsSearchResultsConnectionEdgesSearchBookEdgeNodeBook) GetLegacyId() int64 {
	return v.LegacyId
}

// SearchGetSearchSuggestionsSearchResultsConnectionEdgesSearchBookEdgeNodeBookWork includes the requested fields of the GraphQL type Work.
type SearchGetSearchSuggestionsSearchResultsConnectionEdgesSearchBookEdgeNodeBookWork struct {
	LegacyId int64                                                                                    `json:"legacyId"`
	BestBook SearchGetSearchSuggestionsSearchResultsConnectionEdgesSearchBookEdgeNodeBookWorkBestBook `json:"bestBook"`
}

// GetLegacyId returns SearchGetSearchSuggestionsSearchResultsConnectionEdgesSearchBookEdgeNodeBookWork.LegacyId, and is useful for accessing the field via an interface.
func (v *SearchGetSearchSuggestionsSearchResultsConnectionEdgesSearchBookEdgeNodeBookWork) GetLegacyId() int64 {
	return v.LegacyId
}

// GetBestBook returns SearchGetSearchSuggestionsSearchResultsConnectionEdgesSearchBookEdgeNodeBookWork.BestBook, and is useful for accessing the field via an interface.
func (v *SearchGetSearchSuggestionsSearchResultsConnectionEdgesSearchBookEdgeNodeBookWork) GetBestBook() SearchGetSearchSuggestionsSearchResultsConnectionEdgesSearchBookEdgeNodeBookWorkBestBook {
	return v.BestBook
}

// SearchGetSearchSuggestionsSearchResultsConnectionEdgesSearchBookEdgeNodeBookWorkBestBook includes the requested fields of the GraphQL type Book.
type SearchGetSearchSuggestionsSearchResultsConnectionEdgesSearchBookEdgeNodeBookWorkBestBook struct {
	PrimaryContributorEdge SearchGetSearchSuggestionsSearchResultsConnectionEdgesSearchBookEdgeNodeBookWorkBestBookPrimaryContributorEdgeBookContributorEdge `json:"primaryContributorEdge"`
}

// GetPrimaryContributorEdge returns SearchGetSearchSuggestionsSearchResultsConnectionEdgesSearchBookEdgeNodeBookWorkBestBook.PrimaryContributorEdge, and is useful for accessing the field via an interface.
func (v *SearchGetSearchSuggestionsSearchResultsConnectionEdgesSearchBookEdgeNodeBookWorkBestBook) GetPrimaryContributorEdge() SearchGetSearchSuggestionsSearchResultsConnectionEdgesSearchBookEdgeNodeBookWorkBestBookPrimaryContributorEdgeBookContributorEdge {
	return v.PrimaryContributorEdge
}

// SearchGetSearchSuggestionsSearchResultsConnectionEdgesSearchBookEdgeNodeBookWorkBestBookPrimaryContributorEdgeBookContributorEdge includes the requested fields of the GraphQL type BookContributorEdge.
type SearchGetSearchSuggestionsSearchResultsConnectionEdgesSearchBookEdgeNodeBookWorkBestBookPrimaryContributorEdgeBookContributorEdge struct {
	Node SearchGetSearchSuggestionsSearchResultsConnectionEdgesSearchBookEdgeNodeBookWorkBestBookPrimaryContributorEdgeBookContributorEdgeNodeContributor `json:"node"`
}

// GetNode returns SearchGetSearchSuggestionsSearchResultsConnectionEdgesSearchBookEdgeNodeBookWorkBestBookPrimaryContributorEdgeBookContributorEdge.Node, and is useful for accessing the field via an interface.
func (v *SearchGetSearchSuggestionsSearchResultsConnectionEdgesSearchBookEdgeNodeBookWorkBestBookPrimaryContributorEdgeBookContributorEdge) GetNode() SearchGetSearchSuggestionsSearchResultsConnectionEdgesSearchBookEdgeNodeBookWorkBestBookPrimaryContributorEdgeBookContributorEdgeNodeContributor {
	return v.Node
}

// SearchGetSearchSuggestionsSearchResultsConnectionEdgesSearchBookEdgeNodeBookWorkBestBookPrimaryContributorEdgeBookContributorEdgeNodeContributor includes the requested fields of the GraphQL type Contributor.
type SearchGetSearchSuggestionsSearchResultsConnectionEdgesSearchBookEdgeNodeBookWorkBestBookPrimaryContributorEdgeBookContributorEdgeNodeContributor struct {
	Name     string `json:"name"`
	LegacyId int64  `json:"legacyId"`
}

// GetName returns SearchGetSearchSuggestionsSearchResultsConnectionEdgesSearchBookEdgeNodeBookWorkBestBookPrimaryContributorEdgeBookContributorEdgeNodeContributor.Name, and is useful for accessing the field via an interface.
func (v *SearchGetSearchSuggestionsSearchResultsConnectionEdgesSearchBookEdgeNodeBookWorkBestBookPrimaryContributorEdgeBookContributorEdgeNodeContributor) GetName() string {
	return v.Name
}

// GetLegacyId returns SearchGetSearchSuggestionsSearchResultsConnectionEdgesSearchBookEdgeNodeBookWorkBestBookPrimaryContributorEdgeBookContributorEdgeNodeContributor.LegacyId, and is useful for accessing the field via an interface.
func (v *SearchGetSearchSuggestionsSearchResultsConnectionEdgesSearchBookEdgeNodeBookWorkBestBookPrimaryContributorEdgeBookContributorEdgeNodeContributor) GetLegacyId() int64 {
	return v.LegacyId
}

// SearchGetSearchSuggestionsSearchResultsConnectionEdgesSearchResultEdge includes the requested fields of the GraphQL interface SearchResultEdge.
//
// SearchGetSearchSuggestionsSearchResultsConnectionEdgesSearchResultEdge is implemented by the following types:
// SearchGetSearchSuggestionsSearchResultsConnectionEdgesSearchBookEdge
type SearchGetSearchSuggestionsSearchResultsConnectionEdgesSearchResultEdge interface {
	implementsGraphQLInterfaceSearchGetSearchSuggestionsSearchResultsConnectionEdgesSearchResultEdge()
	// GetTypename returns the receiver's concrete GraphQL type-name (see interface doc for possible values).
	GetTypename() string
}

func (v *SearchGetSearchSuggestionsSearchResultsConnectionEdgesSearchBookEdge) implementsGraphQLInterfaceSearchGetSearchSuggestionsSearchResultsConnectionEdgesSearchResultEdge() {
}

func __unmarshalSearchGetSearchSuggestionsSearchResultsConnectionEdgesSearchResultEdge(b []byte, v *SearchGetSearchSuggestionsSearchResultsConnectionEdgesSearchResultEdge) error {
	if string(b) == "null" {
		return nil
	}

	var tn struct {
		TypeName string `json:"__typename"`
	}
	err := json.Unmarshal(b, &tn)
	if err != nil {
		return err
	}

	switch tn.TypeName {
	case "SearchBookEdge":
		*v = new(SearchGetSearchSuggestionsSearchResultsConnectionEdgesSearchBookEdge)
		return json.Unmarshal(b, *v)
	case "":
		return fmt.Errorf(
			"response was missing SearchResultEdge.__typename")
	default:
		return fmt.Errorf(
			`unexpected concrete type for SearchGetSearchSuggestionsSearchResultsConnectionEdgesSearchResultEdge: "%v"`, tn.TypeName)
	}
}

func __marshalSearchGetSearchSuggestionsSearchResultsConnectionEdgesSearchResultEdge(v *SearchGetSearchSuggestionsSearchResultsConnectionEdgesSearchResultEdge) ([]byte, error) {

	var typename string
	switch v := (*v).(type) {
	case *SearchGetSearchSuggestionsSearchResultsConnectionEdgesSearchBookEdge:
		typename = "SearchBookEdge"

		result := struct {
			TypeName string `json:"__typename"`
			*SearchGetSearchSuggestionsSearchResultsConnectionEdgesSearchBookEdge
		}{typename, v}
		return json.Marshal(result)
	case nil:
		return []byte("null"), nil
	default:
		return nil, fmt.Errorf(
			`unexpected concrete type for SearchGetSearchSuggestionsSearchResultsConnectionEdgesSearchResultEdge: "%T"`, v)
	}
}

// SearchResponse is returned by Search on success.
type SearchResponse struct {
	GetSearchSuggestions SearchGetSearchSuggestionsSearchResultsConnection `json:"getSearchSuggestions"`
}

// GetGetSearchSuggestions returns SearchResponse.GetSearchSuggestions, and is useful for accessing the field via an interface.
func (v *SearchResponse) GetGetSearchSuggestions() SearchGetSearchSuggestionsSearchResultsConnection {
	return v.GetSearchSuggestions
}

// __GetAuthorWorksInput is used internally by genqlient
type __GetAuthorWorksInput struct {
	GetWorksByContributorInput GetWorksByContributorInput `json:"getWorksByContributorInput"`
	Pagination                 PaginationInput            `json:"pagination"`
}

// GetGetWorksByContributorInput returns __GetAuthorWorksInput.GetWorksByContributorInput, and is useful for accessing the field via an interface.
func (v *__GetAuthorWorksInput) GetGetWorksByContributorInput() GetWorksByContributorInput {
	return v.GetWorksByContributorInput
}

// GetPagination returns __GetAuthorWorksInput.Pagination, and is useful for accessing the field via an interface.
func (v *__GetAuthorWorksInput) GetPagination() PaginationInput { return v.Pagination }

// __GetBookInput is used internally by genqlient
type __GetBookInput struct {
	LegacyId int64 `json:"legacyId"`
}

// GetLegacyId returns __GetBookInput.LegacyId, and is useful for accessing the field via an interface.
func (v *__GetBookInput) GetLegacyId() int64 { return v.LegacyId }

// __GetEditionsInput is used internally by genqlient
type __GetEditionsInput struct {
	WorkId     string          `json:"workId"`
	Pagination PaginationInput `json:"pagination"`
}

// GetWorkId returns __GetEditionsInput.WorkId, and is useful for accessing the field via an interface.
func (v *__GetEditionsInput) GetWorkId() string { return v.WorkId }

// GetPagination returns __GetEditionsInput.Pagination, and is useful for accessing the field via an interface.
func (v *__GetEditionsInput) GetPagination() PaginationInput { return v.Pagination }

// __GetSeriesInput is used internally by genqlient
type __GetSeriesInput struct {
	SeriesID   string          `json:"seriesID"`
	Pagination PaginationInput `json:"pagination"`
}

// GetSeriesID returns __GetSeriesInput.SeriesID, and is useful for accessing the field via an interface.
func (v *__GetSeriesInput) GetSeriesID() string { return v.SeriesID }

// GetPagination returns __GetSeriesInput.Pagination, and is useful for accessing the field via an interface.
func (v *__GetSeriesInput) GetPagination() PaginationInput { return v.Pagination }

// __SearchInput is used internally by genqlient
type __SearchInput struct {
	Query string `json:"query"`
}

// GetQuery returns __SearchInput.Query, and is useful for accessing the field via an interface.
func (v *__SearchInput) GetQuery() string { return v.Query }

// The query or mutation executed by GetAuthorWorks.
const GetAuthorWorks_Operation = `
query GetAuthorWorks ($getWorksByContributorInput: GetWorksByContributorInput!, $pagination: PaginationInput!) {
	getWorksByContributor(getWorksByContributorInput: $getWorksByContributorInput, pagination: $pagination) {
		edges {
			node {
				id
				bestBook {
					legacyId
					primaryContributorEdge {
						role
						node {
							legacyId
						}
					}
					secondaryContributorEdges {
						role
					}
				}
			}
		}
		pageInfo {
			hasNextPage
			nextPageToken
		}
	}
}
`

func GetAuthorWorks(
	ctx_ context.Context,
	client_ graphql.Client,
	getWorksByContributorInput GetWorksByContributorInput,
	pagination PaginationInput,
) (*GetAuthorWorksResponse, error) {
	req_ := &graphql.Request{
		OpName: "GetAuthorWorks",
		Query:  GetAuthorWorks_Operation,
		Variables: &__GetAuthorWorksInput{
			GetWorksByContributorInput: getWorksByContributorInput,
			Pagination:                 pagination,
		},
	}
	var err_ error

	var data_ GetAuthorWorksResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by GetBook.
const GetBook_Operation = `
query GetBook ($legacyId: Int!) {
	getBookByLegacyId(legacyId: $legacyId) {
		... BookInfo
		work {
			id
			legacyId
			details {
				webUrl
				publicationTime
			}
			bestBook {
				legacyId
				title
				titlePrimary
				primaryContributorEdge {
					role
					node {
						legacyId
					}
				}
			}
			editions {
				edges {
					node {
						... BookInfo
					}
				}
			}
		}
	}
}
fragment BookInfo on Book {
	id
	legacyId
	description(stripped: true)
	bookGenres {
		genre {
			name
		}
	}
	bookSeries {
		series {
			id
			title
			webUrl
		}
		seriesPlacement
	}
	details {
		asin
		isbn13
		format
		numPages
		language {
			name
		}
		officialUrl
		publisher
		publicationTime
	}
	imageUrl
	primaryContributorEdge {
		node {
			id
			name
			legacyId
			webUrl
			profileImageUrl
			description
		}
	}
	stats {
		averageRating
		ratingsCount
		ratingsSum
	}
	title
	titlePrimary
	webUrl
}
`

func GetBook(
	ctx_ context.Context,
	client_ graphql.Client,
	legacyId int64,
) (*GetBookResponse, error) {
	req_ := &graphql.Request{
		OpName: "GetBook",
		Query:  GetBook_Operation,
		Variables: &__GetBookInput{
			LegacyId: legacyId,
		},
	}
	var err_ error

	var data_ GetBookResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by GetEditions.
const GetEditions_Operation = `
query GetEditions ($workId: ID!, $pagination: PaginationInput!) {
	getEditions(id: $workId, pagination: $pagination) {
		edges {
			node {
				id
				legacyId
			}
		}
		pageInfo {
			hasNextPage
			nextPageToken
		}
	}
}
`

func GetEditions(
	ctx_ context.Context,
	client_ graphql.Client,
	workId string,
	pagination PaginationInput,
) (*GetEditionsResponse, error) {
	req_ := &graphql.Request{
		OpName: "GetEditions",
		Query:  GetEditions_Operation,
		Variables: &__GetEditionsInput{
			WorkId:     workId,
			Pagination: pagination,
		},
	}
	var err_ error

	var data_ GetEditionsResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by GetSeries.
const GetSeries_Operation = `
query GetSeries ($seriesID: ID!, $pagination: PaginationInput!) {
	getWorksForSeries(getWorksForSeriesInput: {id:$seriesID}, pagination: $pagination) {
		edges {
			isPrimary
			seriesPlacement
			node {
				legacyId
			}
		}
	}
}
`

func GetSeries(
	ctx_ context.Context,
	client_ graphql.Client,
	seriesID string,
	pagination PaginationInput,
) (*GetSeriesResponse, error) {
	req_ := &graphql.Request{
		OpName: "GetSeries",
		Query:  GetSeries_Operation,
		Variables: &__GetSeriesInput{
			SeriesID:   seriesID,
			Pagination: pagination,
		},
	}
	var err_ error

	var data_ GetSeriesResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by Search.
const Search_Operation = `
query Search ($query: String!) {
	getSearchSuggestions(query: $query) {
		totalCount
		edges {
			__typename
			... on SearchBookEdge {
				node {
					work {
						legacyId
						bestBook {
							primaryContributorEdge {
								node {
									name
									legacyId
								}
							}
						}
					}
					title
					legacyId
				}
			}
		}
	}
}
`

func Search(
	ctx_ context.Context,
	client_ graphql.Client,
	query string,
) (*SearchResponse, error) {
	req_ := &graphql.Request{
		OpName: "Search",
		Query:  Search_Operation,
		Variables: &__SearchInput{
			Query: query,
		},
	}
	var err_ error

	var data_ SearchResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}
