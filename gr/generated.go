// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

package gr

import (
	"context"

	"github.com/Khan/genqlient/graphql"
)

// GetAuthorWorksGetWorksByContributorContributorWorksConnection includes the requested fields of the GraphQL type ContributorWorksConnection.
type GetAuthorWorksGetWorksByContributorContributorWorksConnection struct {
	Edges    []GetAuthorWorksGetWorksByContributorContributorWorksConnectionEdgesContributorWorksEdge `json:"edges"`
	PageInfo GetAuthorWorksGetWorksByContributorContributorWorksConnectionPageInfo                    `json:"pageInfo"`
}

// GetEdges returns GetAuthorWorksGetWorksByContributorContributorWorksConnection.Edges, and is useful for accessing the field via an interface.
func (v *GetAuthorWorksGetWorksByContributorContributorWorksConnection) GetEdges() []GetAuthorWorksGetWorksByContributorContributorWorksConnectionEdgesContributorWorksEdge {
	return v.Edges
}

// GetPageInfo returns GetAuthorWorksGetWorksByContributorContributorWorksConnection.PageInfo, and is useful for accessing the field via an interface.
func (v *GetAuthorWorksGetWorksByContributorContributorWorksConnection) GetPageInfo() GetAuthorWorksGetWorksByContributorContributorWorksConnectionPageInfo {
	return v.PageInfo
}

// GetAuthorWorksGetWorksByContributorContributorWorksConnectionEdgesContributorWorksEdge includes the requested fields of the GraphQL type ContributorWorksEdge.
type GetAuthorWorksGetWorksByContributorContributorWorksConnectionEdgesContributorWorksEdge struct {
	Node GetAuthorWorksGetWorksByContributorContributorWorksConnectionEdgesContributorWorksEdgeNodeWork `json:"node"`
}

// GetNode returns GetAuthorWorksGetWorksByContributorContributorWorksConnectionEdgesContributorWorksEdge.Node, and is useful for accessing the field via an interface.
func (v *GetAuthorWorksGetWorksByContributorContributorWorksConnectionEdgesContributorWorksEdge) GetNode() GetAuthorWorksGetWorksByContributorContributorWorksConnectionEdgesContributorWorksEdgeNodeWork {
	return v.Node
}

// GetAuthorWorksGetWorksByContributorContributorWorksConnectionEdgesContributorWorksEdgeNodeWork includes the requested fields of the GraphQL type Work.
type GetAuthorWorksGetWorksByContributorContributorWorksConnectionEdgesContributorWorksEdgeNodeWork struct {
	Id       string                                                                                                 `json:"id"`
	BestBook GetAuthorWorksGetWorksByContributorContributorWorksConnectionEdgesContributorWorksEdgeNodeWorkBestBook `json:"bestBook"`
}

// GetId returns GetAuthorWorksGetWorksByContributorContributorWorksConnectionEdgesContributorWorksEdgeNodeWork.Id, and is useful for accessing the field via an interface.
func (v *GetAuthorWorksGetWorksByContributorContributorWorksConnectionEdgesContributorWorksEdgeNodeWork) GetId() string {
	return v.Id
}

// GetBestBook returns GetAuthorWorksGetWorksByContributorContributorWorksConnectionEdgesContributorWorksEdgeNodeWork.BestBook, and is useful for accessing the field via an interface.
func (v *GetAuthorWorksGetWorksByContributorContributorWorksConnectionEdgesContributorWorksEdgeNodeWork) GetBestBook() GetAuthorWorksGetWorksByContributorContributorWorksConnectionEdgesContributorWorksEdgeNodeWorkBestBook {
	return v.BestBook
}

// GetAuthorWorksGetWorksByContributorContributorWorksConnectionEdgesContributorWorksEdgeNodeWorkBestBook includes the requested fields of the GraphQL type Book.
type GetAuthorWorksGetWorksByContributorContributorWorksConnectionEdgesContributorWorksEdgeNodeWorkBestBook struct {
	LegacyId                  int64                                                                                                                                                `json:"legacyId"`
	PrimaryContributorEdge    GetAuthorWorksGetWorksByContributorContributorWorksConnectionEdgesContributorWorksEdgeNodeWorkBestBookPrimaryContributorEdgeBookContributorEdge      `json:"primaryContributorEdge"`
	SecondaryContributorEdges []GetAuthorWorksGetWorksByContributorContributorWorksConnectionEdgesContributorWorksEdgeNodeWorkBestBookSecondaryContributorEdgesBookContributorEdge `json:"secondaryContributorEdges"`
}

// GetLegacyId returns GetAuthorWorksGetWorksByContributorContributorWorksConnectionEdgesContributorWorksEdgeNodeWorkBestBook.LegacyId, and is useful for accessing the field via an interface.
func (v *GetAuthorWorksGetWorksByContributorContributorWorksConnectionEdgesContributorWorksEdgeNodeWorkBestBook) GetLegacyId() int64 {
	return v.LegacyId
}

// GetPrimaryContributorEdge returns GetAuthorWorksGetWorksByContributorContributorWorksConnectionEdgesContributorWorksEdgeNodeWorkBestBook.PrimaryContributorEdge, and is useful for accessing the field via an interface.
func (v *GetAuthorWorksGetWorksByContributorContributorWorksConnectionEdgesContributorWorksEdgeNodeWorkBestBook) GetPrimaryContributorEdge() GetAuthorWorksGetWorksByContributorContributorWorksConnectionEdgesContributorWorksEdgeNodeWorkBestBookPrimaryContributorEdgeBookContributorEdge {
	return v.PrimaryContributorEdge
}

// GetSecondaryContributorEdges returns GetAuthorWorksGetWorksByContributorContributorWorksConnectionEdgesContributorWorksEdgeNodeWorkBestBook.SecondaryContributorEdges, and is useful for accessing the field via an interface.
func (v *GetAuthorWorksGetWorksByContributorContributorWorksConnectionEdgesContributorWorksEdgeNodeWorkBestBook) GetSecondaryContributorEdges() []GetAuthorWorksGetWorksByContributorContributorWorksConnectionEdgesContributorWorksEdgeNodeWorkBestBookSecondaryContributorEdgesBookContributorEdge {
	return v.SecondaryContributorEdges
}

// GetAuthorWorksGetWorksByContributorContributorWorksConnectionEdgesContributorWorksEdgeNodeWorkBestBookPrimaryContributorEdgeBookContributorEdge includes the requested fields of the GraphQL type BookContributorEdge.
type GetAuthorWorksGetWorksByContributorContributorWorksConnectionEdgesContributorWorksEdgeNodeWorkBestBookPrimaryContributorEdgeBookContributorEdge struct {
	Role string                                                                                                                                                         `json:"role"`
	Node GetAuthorWorksGetWorksByContributorContributorWorksConnectionEdgesContributorWorksEdgeNodeWorkBestBookPrimaryContributorEdgeBookContributorEdgeNodeContributor `json:"node"`
}

// GetRole returns GetAuthorWorksGetWorksByContributorContributorWorksConnectionEdgesContributorWorksEdgeNodeWorkBestBookPrimaryContributorEdgeBookContributorEdge.Role, and is useful for accessing the field via an interface.
func (v *GetAuthorWorksGetWorksByContributorContributorWorksConnectionEdgesContributorWorksEdgeNodeWorkBestBookPrimaryContributorEdgeBookContributorEdge) GetRole() string {
	return v.Role
}

// GetNode returns GetAuthorWorksGetWorksByContributorContributorWorksConnectionEdgesContributorWorksEdgeNodeWorkBestBookPrimaryContributorEdgeBookContributorEdge.Node, and is useful for accessing the field via an interface.
func (v *GetAuthorWorksGetWorksByContributorContributorWorksConnectionEdgesContributorWorksEdgeNodeWorkBestBookPrimaryContributorEdgeBookContributorEdge) GetNode() GetAuthorWorksGetWorksByContributorContributorWorksConnectionEdgesContributorWorksEdgeNodeWorkBestBookPrimaryContributorEdgeBookContributorEdgeNodeContributor {
	return v.Node
}

// GetAuthorWorksGetWorksByContributorContributorWorksConnectionEdgesContributorWorksEdgeNodeWorkBestBookPrimaryContributorEdgeBookContributorEdgeNodeContributor includes the requested fields of the GraphQL type Contributor.
type GetAuthorWorksGetWorksByContributorContributorWorksConnectionEdgesContributorWorksEdgeNodeWorkBestBookPrimaryContributorEdgeBookContributorEdgeNodeContributor struct {
	LegacyId int64 `json:"legacyId"`
}

// GetLegacyId returns GetAuthorWorksGetWorksByContributorContributorWorksConnectionEdgesContributorWorksEdgeNodeWorkBestBookPrimaryContributorEdgeBookContributorEdgeNodeContributor.LegacyId, and is useful for accessing the field via an interface.
func (v *GetAuthorWorksGetWorksByContributorContributorWorksConnectionEdgesContributorWorksEdgeNodeWorkBestBookPrimaryContributorEdgeBookContributorEdgeNodeContributor) GetLegacyId() int64 {
	return v.LegacyId
}

// GetAuthorWorksGetWorksByContributorContributorWorksConnectionEdgesContributorWorksEdgeNodeWorkBestBookSecondaryContributorEdgesBookContributorEdge includes the requested fields of the GraphQL type BookContributorEdge.
type GetAuthorWorksGetWorksByContributorContributorWorksConnectionEdgesContributorWorksEdgeNodeWorkBestBookSecondaryContributorEdgesBookContributorEdge struct {
	Role string `json:"role"`
}

// GetRole returns GetAuthorWorksGetWorksByContributorContributorWorksConnectionEdgesContributorWorksEdgeNodeWorkBestBookSecondaryContributorEdgesBookContributorEdge.Role, and is useful for accessing the field via an interface.
func (v *GetAuthorWorksGetWorksByContributorContributorWorksConnectionEdgesContributorWorksEdgeNodeWorkBestBookSecondaryContributorEdgesBookContributorEdge) GetRole() string {
	return v.Role
}

// GetAuthorWorksGetWorksByContributorContributorWorksConnectionPageInfo includes the requested fields of the GraphQL type PageInfo.
type GetAuthorWorksGetWorksByContributorContributorWorksConnectionPageInfo struct {
	HasNextPage   bool   `json:"hasNextPage"`
	NextPageToken string `json:"nextPageToken"`
}

// GetHasNextPage returns GetAuthorWorksGetWorksByContributorContributorWorksConnectionPageInfo.HasNextPage, and is useful for accessing the field via an interface.
func (v *GetAuthorWorksGetWorksByContributorContributorWorksConnectionPageInfo) GetHasNextPage() bool {
	return v.HasNextPage
}

// GetNextPageToken returns GetAuthorWorksGetWorksByContributorContributorWorksConnectionPageInfo.NextPageToken, and is useful for accessing the field via an interface.
func (v *GetAuthorWorksGetWorksByContributorContributorWorksConnectionPageInfo) GetNextPageToken() string {
	return v.NextPageToken
}

// GetAuthorWorksResponse is returned by GetAuthorWorks on success.
type GetAuthorWorksResponse struct {
	GetWorksByContributor GetAuthorWorksGetWorksByContributorContributorWorksConnection `json:"getWorksByContributor"`
}

// GetGetWorksByContributor returns GetAuthorWorksResponse.GetWorksByContributor, and is useful for accessing the field via an interface.
func (v *GetAuthorWorksResponse) GetGetWorksByContributor() GetAuthorWorksGetWorksByContributorContributorWorksConnection {
	return v.GetWorksByContributor
}

// GetBookGetBookByLegacyIdBook includes the requested fields of the GraphQL type Book.
type GetBookGetBookByLegacyIdBook struct {
	Id                     string                                                                `json:"id"`
	LegacyId               int64                                                                 `json:"legacyId"`
	Description            string                                                                `json:"description"`
	BookGenres             []GetBookGetBookByLegacyIdBookBookGenresBookGenre                     `json:"bookGenres"`
	BookSeries             []GetBookGetBookByLegacyIdBookBookSeries                              `json:"bookSeries"`
	Details                GetBookGetBookByLegacyIdBookDetails                                   `json:"details"`
	ImageUrl               string                                                                `json:"imageUrl"`
	PrimaryContributorEdge GetBookGetBookByLegacyIdBookPrimaryContributorEdgeBookContributorEdge `json:"primaryContributorEdge"`
	Stats                  GetBookGetBookByLegacyIdBookStatsBookOrWorkStats                      `json:"stats"`
	Title                  string                                                                `json:"title"`
	TitlePrimary           string                                                                `json:"titlePrimary"`
	WebUrl                 string                                                                `json:"webUrl"`
	Work                   GetBookGetBookByLegacyIdBookWork                                      `json:"work"`
}

// GetId returns GetBookGetBookByLegacyIdBook.Id, and is useful for accessing the field via an interface.
func (v *GetBookGetBookByLegacyIdBook) GetId() string { return v.Id }

// GetLegacyId returns GetBookGetBookByLegacyIdBook.LegacyId, and is useful for accessing the field via an interface.
func (v *GetBookGetBookByLegacyIdBook) GetLegacyId() int64 { return v.LegacyId }

// GetDescription returns GetBookGetBookByLegacyIdBook.Description, and is useful for accessing the field via an interface.
func (v *GetBookGetBookByLegacyIdBook) GetDescription() string { return v.Description }

// GetBookGenres returns GetBookGetBookByLegacyIdBook.BookGenres, and is useful for accessing the field via an interface.
func (v *GetBookGetBookByLegacyIdBook) GetBookGenres() []GetBookGetBookByLegacyIdBookBookGenresBookGenre {
	return v.BookGenres
}

// GetBookSeries returns GetBookGetBookByLegacyIdBook.BookSeries, and is useful for accessing the field via an interface.
func (v *GetBookGetBookByLegacyIdBook) GetBookSeries() []GetBookGetBookByLegacyIdBookBookSeries {
	return v.BookSeries
}

// GetDetails returns GetBookGetBookByLegacyIdBook.Details, and is useful for accessing the field via an interface.
func (v *GetBookGetBookByLegacyIdBook) GetDetails() GetBookGetBookByLegacyIdBookDetails {
	return v.Details
}

// GetImageUrl returns GetBookGetBookByLegacyIdBook.ImageUrl, and is useful for accessing the field via an interface.
func (v *GetBookGetBookByLegacyIdBook) GetImageUrl() string { return v.ImageUrl }

// GetPrimaryContributorEdge returns GetBookGetBookByLegacyIdBook.PrimaryContributorEdge, and is useful for accessing the field via an interface.
func (v *GetBookGetBookByLegacyIdBook) GetPrimaryContributorEdge() GetBookGetBookByLegacyIdBookPrimaryContributorEdgeBookContributorEdge {
	return v.PrimaryContributorEdge
}

// GetStats returns GetBookGetBookByLegacyIdBook.Stats, and is useful for accessing the field via an interface.
func (v *GetBookGetBookByLegacyIdBook) GetStats() GetBookGetBookByLegacyIdBookStatsBookOrWorkStats {
	return v.Stats
}

// GetTitle returns GetBookGetBookByLegacyIdBook.Title, and is useful for accessing the field via an interface.
func (v *GetBookGetBookByLegacyIdBook) GetTitle() string { return v.Title }

// GetTitlePrimary returns GetBookGetBookByLegacyIdBook.TitlePrimary, and is useful for accessing the field via an interface.
func (v *GetBookGetBookByLegacyIdBook) GetTitlePrimary() string { return v.TitlePrimary }

// GetWebUrl returns GetBookGetBookByLegacyIdBook.WebUrl, and is useful for accessing the field via an interface.
func (v *GetBookGetBookByLegacyIdBook) GetWebUrl() string { return v.WebUrl }

// GetWork returns GetBookGetBookByLegacyIdBook.Work, and is useful for accessing the field via an interface.
func (v *GetBookGetBookByLegacyIdBook) GetWork() GetBookGetBookByLegacyIdBookWork { return v.Work }

// GetBookGetBookByLegacyIdBookBookGenresBookGenre includes the requested fields of the GraphQL type BookGenre.
type GetBookGetBookByLegacyIdBookBookGenresBookGenre struct {
	Genre GetBookGetBookByLegacyIdBookBookGenresBookGenreGenre `json:"genre"`
}

// GetGenre returns GetBookGetBookByLegacyIdBookBookGenresBookGenre.Genre, and is useful for accessing the field via an interface.
func (v *GetBookGetBookByLegacyIdBookBookGenresBookGenre) GetGenre() GetBookGetBookByLegacyIdBookBookGenresBookGenreGenre {
	return v.Genre
}

// GetBookGetBookByLegacyIdBookBookGenresBookGenreGenre includes the requested fields of the GraphQL type Genre.
type GetBookGetBookByLegacyIdBookBookGenresBookGenreGenre struct {
	Name string `json:"name"`
}

// GetName returns GetBookGetBookByLegacyIdBookBookGenresBookGenreGenre.Name, and is useful for accessing the field via an interface.
func (v *GetBookGetBookByLegacyIdBookBookGenresBookGenreGenre) GetName() string { return v.Name }

// GetBookGetBookByLegacyIdBookBookSeries includes the requested fields of the GraphQL type BookSeries.
type GetBookGetBookByLegacyIdBookBookSeries struct {
	Series          GetBookGetBookByLegacyIdBookBookSeriesSeries `json:"series"`
	SeriesPlacement string                                       `json:"seriesPlacement"`
}

// GetSeries returns GetBookGetBookByLegacyIdBookBookSeries.Series, and is useful for accessing the field via an interface.
func (v *GetBookGetBookByLegacyIdBookBookSeries) GetSeries() GetBookGetBookByLegacyIdBookBookSeriesSeries {
	return v.Series
}

// GetSeriesPlacement returns GetBookGetBookByLegacyIdBookBookSeries.SeriesPlacement, and is useful for accessing the field via an interface.
func (v *GetBookGetBookByLegacyIdBookBookSeries) GetSeriesPlacement() string {
	return v.SeriesPlacement
}

// GetBookGetBookByLegacyIdBookBookSeriesSeries includes the requested fields of the GraphQL type Series.
type GetBookGetBookByLegacyIdBookBookSeriesSeries struct {
	Id     string `json:"id"`
	Title  string `json:"title"`
	WebUrl string `json:"webUrl"`
}

// GetId returns GetBookGetBookByLegacyIdBookBookSeriesSeries.Id, and is useful for accessing the field via an interface.
func (v *GetBookGetBookByLegacyIdBookBookSeriesSeries) GetId() string { return v.Id }

// GetTitle returns GetBookGetBookByLegacyIdBookBookSeriesSeries.Title, and is useful for accessing the field via an interface.
func (v *GetBookGetBookByLegacyIdBookBookSeriesSeries) GetTitle() string { return v.Title }

// GetWebUrl returns GetBookGetBookByLegacyIdBookBookSeriesSeries.WebUrl, and is useful for accessing the field via an interface.
func (v *GetBookGetBookByLegacyIdBookBookSeriesSeries) GetWebUrl() string { return v.WebUrl }

// GetBookGetBookByLegacyIdBookDetails includes the requested fields of the GraphQL type BookDetails.
type GetBookGetBookByLegacyIdBookDetails struct {
	Asin            string                                      `json:"asin"`
	Isbn13          string                                      `json:"isbn13"`
	Format          string                                      `json:"format"`
	NumPages        int64                                       `json:"numPages"`
	Language        GetBookGetBookByLegacyIdBookDetailsLanguage `json:"language"`
	OfficialUrl     string                                      `json:"officialUrl"`
	Publisher       string                                      `json:"publisher"`
	PublicationTime float64                                     `json:"publicationTime"`
}

// GetAsin returns GetBookGetBookByLegacyIdBookDetails.Asin, and is useful for accessing the field via an interface.
func (v *GetBookGetBookByLegacyIdBookDetails) GetAsin() string { return v.Asin }

// GetIsbn13 returns GetBookGetBookByLegacyIdBookDetails.Isbn13, and is useful for accessing the field via an interface.
func (v *GetBookGetBookByLegacyIdBookDetails) GetIsbn13() string { return v.Isbn13 }

// GetFormat returns GetBookGetBookByLegacyIdBookDetails.Format, and is useful for accessing the field via an interface.
func (v *GetBookGetBookByLegacyIdBookDetails) GetFormat() string { return v.Format }

// GetNumPages returns GetBookGetBookByLegacyIdBookDetails.NumPages, and is useful for accessing the field via an interface.
func (v *GetBookGetBookByLegacyIdBookDetails) GetNumPages() int64 { return v.NumPages }

// GetLanguage returns GetBookGetBookByLegacyIdBookDetails.Language, and is useful for accessing the field via an interface.
func (v *GetBookGetBookByLegacyIdBookDetails) GetLanguage() GetBookGetBookByLegacyIdBookDetailsLanguage {
	return v.Language
}

// GetOfficialUrl returns GetBookGetBookByLegacyIdBookDetails.OfficialUrl, and is useful for accessing the field via an interface.
func (v *GetBookGetBookByLegacyIdBookDetails) GetOfficialUrl() string { return v.OfficialUrl }

// GetPublisher returns GetBookGetBookByLegacyIdBookDetails.Publisher, and is useful for accessing the field via an interface.
func (v *GetBookGetBookByLegacyIdBookDetails) GetPublisher() string { return v.Publisher }

// GetPublicationTime returns GetBookGetBookByLegacyIdBookDetails.PublicationTime, and is useful for accessing the field via an interface.
func (v *GetBookGetBookByLegacyIdBookDetails) GetPublicationTime() float64 { return v.PublicationTime }

// GetBookGetBookByLegacyIdBookDetailsLanguage includes the requested fields of the GraphQL type Language.
type GetBookGetBookByLegacyIdBookDetailsLanguage struct {
	Name string `json:"name"`
}

// GetName returns GetBookGetBookByLegacyIdBookDetailsLanguage.Name, and is useful for accessing the field via an interface.
func (v *GetBookGetBookByLegacyIdBookDetailsLanguage) GetName() string { return v.Name }

// GetBookGetBookByLegacyIdBookPrimaryContributorEdgeBookContributorEdge includes the requested fields of the GraphQL type BookContributorEdge.
type GetBookGetBookByLegacyIdBookPrimaryContributorEdgeBookContributorEdge struct {
	Node GetBookGetBookByLegacyIdBookPrimaryContributorEdgeBookContributorEdgeNodeContributor `json:"node"`
}

// GetNode returns GetBookGetBookByLegacyIdBookPrimaryContributorEdgeBookContributorEdge.Node, and is useful for accessing the field via an interface.
func (v *GetBookGetBookByLegacyIdBookPrimaryContributorEdgeBookContributorEdge) GetNode() GetBookGetBookByLegacyIdBookPrimaryContributorEdgeBookContributorEdgeNodeContributor {
	return v.Node
}

// GetBookGetBookByLegacyIdBookPrimaryContributorEdgeBookContributorEdgeNodeContributor includes the requested fields of the GraphQL type Contributor.
type GetBookGetBookByLegacyIdBookPrimaryContributorEdgeBookContributorEdgeNodeContributor struct {
	Id              string `json:"id"`
	Name            string `json:"name"`
	LegacyId        int64  `json:"legacyId"`
	WebUrl          string `json:"webUrl"`
	ProfileImageUrl string `json:"profileImageUrl"`
	Description     string `json:"description"`
}

// GetId returns GetBookGetBookByLegacyIdBookPrimaryContributorEdgeBookContributorEdgeNodeContributor.Id, and is useful for accessing the field via an interface.
func (v *GetBookGetBookByLegacyIdBookPrimaryContributorEdgeBookContributorEdgeNodeContributor) GetId() string {
	return v.Id
}

// GetName returns GetBookGetBookByLegacyIdBookPrimaryContributorEdgeBookContributorEdgeNodeContributor.Name, and is useful for accessing the field via an interface.
func (v *GetBookGetBookByLegacyIdBookPrimaryContributorEdgeBookContributorEdgeNodeContributor) GetName() string {
	return v.Name
}

// GetLegacyId returns GetBookGetBookByLegacyIdBookPrimaryContributorEdgeBookContributorEdgeNodeContributor.LegacyId, and is useful for accessing the field via an interface.
func (v *GetBookGetBookByLegacyIdBookPrimaryContributorEdgeBookContributorEdgeNodeContributor) GetLegacyId() int64 {
	return v.LegacyId
}

// GetWebUrl returns GetBookGetBookByLegacyIdBookPrimaryContributorEdgeBookContributorEdgeNodeContributor.WebUrl, and is useful for accessing the field via an interface.
func (v *GetBookGetBookByLegacyIdBookPrimaryContributorEdgeBookContributorEdgeNodeContributor) GetWebUrl() string {
	return v.WebUrl
}

// GetProfileImageUrl returns GetBookGetBookByLegacyIdBookPrimaryContributorEdgeBookContributorEdgeNodeContributor.ProfileImageUrl, and is useful for accessing the field via an interface.
func (v *GetBookGetBookByLegacyIdBookPrimaryContributorEdgeBookContributorEdgeNodeContributor) GetProfileImageUrl() string {
	return v.ProfileImageUrl
}

// GetDescription returns GetBookGetBookByLegacyIdBookPrimaryContributorEdgeBookContributorEdgeNodeContributor.Description, and is useful for accessing the field via an interface.
func (v *GetBookGetBookByLegacyIdBookPrimaryContributorEdgeBookContributorEdgeNodeContributor) GetDescription() string {
	return v.Description
}

// GetBookGetBookByLegacyIdBookStatsBookOrWorkStats includes the requested fields of the GraphQL type BookOrWorkStats.
type GetBookGetBookByLegacyIdBookStatsBookOrWorkStats struct {
	AverageRating float64 `json:"averageRating"`
	RatingsCount  int64   `json:"ratingsCount"`
	RatingsSum    int64   `json:"ratingsSum"`
}

// GetAverageRating returns GetBookGetBookByLegacyIdBookStatsBookOrWorkStats.AverageRating, and is useful for accessing the field via an interface.
func (v *GetBookGetBookByLegacyIdBookStatsBookOrWorkStats) GetAverageRating() float64 {
	return v.AverageRating
}

// GetRatingsCount returns GetBookGetBookByLegacyIdBookStatsBookOrWorkStats.RatingsCount, and is useful for accessing the field via an interface.
func (v *GetBookGetBookByLegacyIdBookStatsBookOrWorkStats) GetRatingsCount() int64 {
	return v.RatingsCount
}

// GetRatingsSum returns GetBookGetBookByLegacyIdBookStatsBookOrWorkStats.RatingsSum, and is useful for accessing the field via an interface.
func (v *GetBookGetBookByLegacyIdBookStatsBookOrWorkStats) GetRatingsSum() int64 { return v.RatingsSum }

// GetBookGetBookByLegacyIdBookWork includes the requested fields of the GraphQL type Work.
type GetBookGetBookByLegacyIdBookWork struct {
	Id       string                                   `json:"id"`
	LegacyId int64                                    `json:"legacyId"`
	Details  GetBookGetBookByLegacyIdBookWorkDetails  `json:"details"`
	BestBook GetBookGetBookByLegacyIdBookWorkBestBook `json:"bestBook"`
}

// GetId returns GetBookGetBookByLegacyIdBookWork.Id, and is useful for accessing the field via an interface.
func (v *GetBookGetBookByLegacyIdBookWork) GetId() string { return v.Id }

// GetLegacyId returns GetBookGetBookByLegacyIdBookWork.LegacyId, and is useful for accessing the field via an interface.
func (v *GetBookGetBookByLegacyIdBookWork) GetLegacyId() int64 { return v.LegacyId }

// GetDetails returns GetBookGetBookByLegacyIdBookWork.Details, and is useful for accessing the field via an interface.
func (v *GetBookGetBookByLegacyIdBookWork) GetDetails() GetBookGetBookByLegacyIdBookWorkDetails {
	return v.Details
}

// GetBestBook returns GetBookGetBookByLegacyIdBookWork.BestBook, and is useful for accessing the field via an interface.
func (v *GetBookGetBookByLegacyIdBookWork) GetBestBook() GetBookGetBookByLegacyIdBookWorkBestBook {
	return v.BestBook
}

// GetBookGetBookByLegacyIdBookWorkBestBook includes the requested fields of the GraphQL type Book.
type GetBookGetBookByLegacyIdBookWorkBestBook struct {
	LegacyId     int64  `json:"legacyId"`
	Title        string `json:"title"`
	TitlePrimary string `json:"titlePrimary"`
}

// GetLegacyId returns GetBookGetBookByLegacyIdBookWorkBestBook.LegacyId, and is useful for accessing the field via an interface.
func (v *GetBookGetBookByLegacyIdBookWorkBestBook) GetLegacyId() int64 { return v.LegacyId }

// GetTitle returns GetBookGetBookByLegacyIdBookWorkBestBook.Title, and is useful for accessing the field via an interface.
func (v *GetBookGetBookByLegacyIdBookWorkBestBook) GetTitle() string { return v.Title }

// GetTitlePrimary returns GetBookGetBookByLegacyIdBookWorkBestBook.TitlePrimary, and is useful for accessing the field via an interface.
func (v *GetBookGetBookByLegacyIdBookWorkBestBook) GetTitlePrimary() string { return v.TitlePrimary }

// GetBookGetBookByLegacyIdBookWorkDetails includes the requested fields of the GraphQL type WorkDetails.
type GetBookGetBookByLegacyIdBookWorkDetails struct {
	WebUrl          string  `json:"webUrl"`
	PublicationTime float64 `json:"publicationTime"`
}

// GetWebUrl returns GetBookGetBookByLegacyIdBookWorkDetails.WebUrl, and is useful for accessing the field via an interface.
func (v *GetBookGetBookByLegacyIdBookWorkDetails) GetWebUrl() string { return v.WebUrl }

// GetPublicationTime returns GetBookGetBookByLegacyIdBookWorkDetails.PublicationTime, and is useful for accessing the field via an interface.
func (v *GetBookGetBookByLegacyIdBookWorkDetails) GetPublicationTime() float64 {
	return v.PublicationTime
}

// GetBookResponse is returned by GetBook on success.
type GetBookResponse struct {
	GetBookByLegacyId GetBookGetBookByLegacyIdBook `json:"getBookByLegacyId"`
}

// GetGetBookByLegacyId returns GetBookResponse.GetBookByLegacyId, and is useful for accessing the field via an interface.
func (v *GetBookResponse) GetGetBookByLegacyId() GetBookGetBookByLegacyIdBook {
	return v.GetBookByLegacyId
}

// GetEditionsGetEditionsBooksConnection includes the requested fields of the GraphQL type BooksConnection.
type GetEditionsGetEditionsBooksConnection struct {
	Edges    []GetEditionsGetEditionsBooksConnectionEdgesBooksEdge `json:"edges"`
	PageInfo GetEditionsGetEditionsBooksConnectionPageInfo         `json:"pageInfo"`
}

// GetEdges returns GetEditionsGetEditionsBooksConnection.Edges, and is useful for accessing the field via an interface.
func (v *GetEditionsGetEditionsBooksConnection) GetEdges() []GetEditionsGetEditionsBooksConnectionEdgesBooksEdge {
	return v.Edges
}

// GetPageInfo returns GetEditionsGetEditionsBooksConnection.PageInfo, and is useful for accessing the field via an interface.
func (v *GetEditionsGetEditionsBooksConnection) GetPageInfo() GetEditionsGetEditionsBooksConnectionPageInfo {
	return v.PageInfo
}

// GetEditionsGetEditionsBooksConnectionEdgesBooksEdge includes the requested fields of the GraphQL type BooksEdge.
type GetEditionsGetEditionsBooksConnectionEdgesBooksEdge struct {
	Node GetEditionsGetEditionsBooksConnectionEdgesBooksEdgeNodeBook `json:"node"`
}

// GetNode returns GetEditionsGetEditionsBooksConnectionEdgesBooksEdge.Node, and is useful for accessing the field via an interface.
func (v *GetEditionsGetEditionsBooksConnectionEdgesBooksEdge) GetNode() GetEditionsGetEditionsBooksConnectionEdgesBooksEdgeNodeBook {
	return v.Node
}

// GetEditionsGetEditionsBooksConnectionEdgesBooksEdgeNodeBook includes the requested fields of the GraphQL type Book.
type GetEditionsGetEditionsBooksConnectionEdgesBooksEdgeNodeBook struct {
	Id       string `json:"id"`
	LegacyId int64  `json:"legacyId"`
}

// GetId returns GetEditionsGetEditionsBooksConnectionEdgesBooksEdgeNodeBook.Id, and is useful for accessing the field via an interface.
func (v *GetEditionsGetEditionsBooksConnectionEdgesBooksEdgeNodeBook) GetId() string { return v.Id }

// GetLegacyId returns GetEditionsGetEditionsBooksConnectionEdgesBooksEdgeNodeBook.LegacyId, and is useful for accessing the field via an interface.
func (v *GetEditionsGetEditionsBooksConnectionEdgesBooksEdgeNodeBook) GetLegacyId() int64 {
	return v.LegacyId
}

// GetEditionsGetEditionsBooksConnectionPageInfo includes the requested fields of the GraphQL type PageInfo.
type GetEditionsGetEditionsBooksConnectionPageInfo struct {
	HasNextPage   bool   `json:"hasNextPage"`
	NextPageToken string `json:"nextPageToken"`
}

// GetHasNextPage returns GetEditionsGetEditionsBooksConnectionPageInfo.HasNextPage, and is useful for accessing the field via an interface.
func (v *GetEditionsGetEditionsBooksConnectionPageInfo) GetHasNextPage() bool { return v.HasNextPage }

// GetNextPageToken returns GetEditionsGetEditionsBooksConnectionPageInfo.NextPageToken, and is useful for accessing the field via an interface.
func (v *GetEditionsGetEditionsBooksConnectionPageInfo) GetNextPageToken() string {
	return v.NextPageToken
}

// GetEditionsResponse is returned by GetEditions on success.
type GetEditionsResponse struct {
	GetEditions GetEditionsGetEditionsBooksConnection `json:"getEditions"`
}

// GetGetEditions returns GetEditionsResponse.GetEditions, and is useful for accessing the field via an interface.
func (v *GetEditionsResponse) GetGetEditions() GetEditionsGetEditionsBooksConnection {
	return v.GetEditions
}

type GetWorksByContributorInput struct {
	Id string `json:"id"`
}

// GetId returns GetWorksByContributorInput.Id, and is useful for accessing the field via an interface.
func (v *GetWorksByContributorInput) GetId() string { return v.Id }

type PaginationInput struct {
	After  string `json:"after"`
	Before string `json:"before"`
	Limit  int64  `json:"limit"`
}

// GetAfter returns PaginationInput.After, and is useful for accessing the field via an interface.
func (v *PaginationInput) GetAfter() string { return v.After }

// GetBefore returns PaginationInput.Before, and is useful for accessing the field via an interface.
func (v *PaginationInput) GetBefore() string { return v.Before }

// GetLimit returns PaginationInput.Limit, and is useful for accessing the field via an interface.
func (v *PaginationInput) GetLimit() int64 { return v.Limit }

// __GetAuthorWorksInput is used internally by genqlient
type __GetAuthorWorksInput struct {
	GetWorksByContributorInput GetWorksByContributorInput `json:"getWorksByContributorInput"`
	Pagination                 PaginationInput            `json:"pagination"`
}

// GetGetWorksByContributorInput returns __GetAuthorWorksInput.GetWorksByContributorInput, and is useful for accessing the field via an interface.
func (v *__GetAuthorWorksInput) GetGetWorksByContributorInput() GetWorksByContributorInput {
	return v.GetWorksByContributorInput
}

// GetPagination returns __GetAuthorWorksInput.Pagination, and is useful for accessing the field via an interface.
func (v *__GetAuthorWorksInput) GetPagination() PaginationInput { return v.Pagination }

// __GetBookInput is used internally by genqlient
type __GetBookInput struct {
	LegacyId int64 `json:"legacyId"`
}

// GetLegacyId returns __GetBookInput.LegacyId, and is useful for accessing the field via an interface.
func (v *__GetBookInput) GetLegacyId() int64 { return v.LegacyId }

// __GetEditionsInput is used internally by genqlient
type __GetEditionsInput struct {
	WorkId     string          `json:"workId"`
	Pagination PaginationInput `json:"pagination"`
}

// GetWorkId returns __GetEditionsInput.WorkId, and is useful for accessing the field via an interface.
func (v *__GetEditionsInput) GetWorkId() string { return v.WorkId }

// GetPagination returns __GetEditionsInput.Pagination, and is useful for accessing the field via an interface.
func (v *__GetEditionsInput) GetPagination() PaginationInput { return v.Pagination }

// The query or mutation executed by GetAuthorWorks.
const GetAuthorWorks_Operation = `
query GetAuthorWorks ($getWorksByContributorInput: GetWorksByContributorInput!, $pagination: PaginationInput!) {
	getWorksByContributor(getWorksByContributorInput: $getWorksByContributorInput, pagination: $pagination) {
		edges {
			node {
				id
				bestBook {
					legacyId
					primaryContributorEdge {
						role
						node {
							legacyId
						}
					}
					secondaryContributorEdges {
						role
					}
				}
			}
		}
		pageInfo {
			hasNextPage
			nextPageToken
		}
	}
}
`

func GetAuthorWorks(
	ctx_ context.Context,
	client_ graphql.Client,
	getWorksByContributorInput GetWorksByContributorInput,
	pagination PaginationInput,
) (*GetAuthorWorksResponse, error) {
	req_ := &graphql.Request{
		OpName: "GetAuthorWorks",
		Query:  GetAuthorWorks_Operation,
		Variables: &__GetAuthorWorksInput{
			GetWorksByContributorInput: getWorksByContributorInput,
			Pagination:                 pagination,
		},
	}
	var err_ error

	var data_ GetAuthorWorksResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by GetBook.
const GetBook_Operation = `
query GetBook ($legacyId: Int!) {
	getBookByLegacyId(legacyId: $legacyId) {
		id
		legacyId
		description(stripped: true)
		bookGenres {
			genre {
				name
			}
		}
		bookSeries {
			series {
				id
				title
				webUrl
			}
			seriesPlacement
		}
		details {
			asin
			isbn13
			format
			numPages
			language {
				name
			}
			officialUrl
			publisher
			publicationTime
		}
		imageUrl
		primaryContributorEdge {
			node {
				id
				name
				legacyId
				webUrl
				profileImageUrl
				description
			}
		}
		stats {
			averageRating
			ratingsCount
			ratingsSum
		}
		title
		titlePrimary
		webUrl
		work {
			id
			legacyId
			details {
				webUrl
				publicationTime
			}
			bestBook {
				legacyId
				title
				titlePrimary
			}
		}
	}
}
`

func GetBook(
	ctx_ context.Context,
	client_ graphql.Client,
	legacyId int64,
) (*GetBookResponse, error) {
	req_ := &graphql.Request{
		OpName: "GetBook",
		Query:  GetBook_Operation,
		Variables: &__GetBookInput{
			LegacyId: legacyId,
		},
	}
	var err_ error

	var data_ GetBookResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by GetEditions.
const GetEditions_Operation = `
query GetEditions ($workId: ID!, $pagination: PaginationInput!) {
	getEditions(id: $workId, pagination: $pagination) {
		edges {
			node {
				id
				legacyId
			}
		}
		pageInfo {
			hasNextPage
			nextPageToken
		}
	}
}
`

func GetEditions(
	ctx_ context.Context,
	client_ graphql.Client,
	workId string,
	pagination PaginationInput,
) (*GetEditionsResponse, error) {
	req_ := &graphql.Request{
		OpName: "GetEditions",
		Query:  GetEditions_Operation,
		Variables: &__GetEditionsInput{
			WorkId:     workId,
			Pagination: pagination,
		},
	}
	var err_ error

	var data_ GetEditionsResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}
